<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BirdWarsTest</name>
    </assembly>
    <members>
        <member name="T:BirdWarsTest.AttackComponents.AttackComponent">
            <summary>
            AttackComponent handles gameObject attacks.
            Creates attack area rectangle, attacks, stores damage values
            and has methods that handle attack timer.
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.AttackComponent.#ctor">
            <summary>
            Default constructor. Sets Damage to 1, AttackTimer to 13,
            attackWidth and attackHeight to 75.
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.AttackComponent.#ctor(System.Int32)">
            <summary>
            Constructor that takes a damage input parameter. It sets
            Damage to the damage input, AttackTimer to 13, attackWidth
            and attackHeight to 75
            </summary>
            <param name="damageIn">An integer value</param>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.AttackComponent.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor that takes a damage, width and height parameter.
            AttackTimer is set to 13. Remainig properties are set to their
            respective input values.
            </summary>
            <param name="damageIn">An integer value</param>
            <param name="attackWidthIn">An integer value</param>
            <param name="attackHeightIn">An integer value</param>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.AttackComponent.DoAttack">
            <summary>
            Activates gameObject attack.
            If the property IsAttacking is false, it is set to true.
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.AttackComponent.UpdateAttackTimer">
            <summary>
            Updates the AttackTimer if the IsAttacking property 
            is true.
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.AttackComponent.TimerTick">
            <summary>
            Decreases attackTimer by 1 everyframe.
            If AttackTimer is less than or equal to zero,
            the AttackTimer is reset to its starting value
            and IsAttacking is reset to false;
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.AttackComponent.GetAttackRectangle(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Calculates and returns the attack area rectangle which
            is used to check if a gameobject is hit by another object's
            attack.
            </summary>
            <param name="gameObject">The gameObject that is attacking.</param>
            <returns>The attack area rectangle.</returns>
        </member>
        <member name="P:BirdWarsTest.AttackComponents.AttackComponent.Damage">
            <Value>The damage Property of AttackComponent.</Value>
        </member>
        <member name="P:BirdWarsTest.AttackComponents.AttackComponent.IsAttacking">
            <Value>Bool used to check whether a gameObject is attacking or not.</Value>
        </member>
        <member name="P:BirdWarsTest.AttackComponents.AttackComponent.AttackTimer">
            <Value>Property used to maintain attack for a certain amount of time.</Value>
        </member>
        <member name="F:BirdWarsTest.AttackComponents.AttackComponent.attackWidth">
            <summary>
            Width used to calculate the attack area rectangle.
            </summary>
        </member>
        <member name="F:BirdWarsTest.AttackComponents.AttackComponent.attackHeight">
            <summary>
            Height used to calculate the attack area rectangle.
            </summary>
        </member>
        <member name="T:BirdWarsTest.AttackComponents.GrenadeAttackComponent">
            <summary>
            GrenadeAttackComponent inherits from AttackComponent.
            It modifies attacks that are used by grenade gameObjects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.GrenadeAttackComponent.#ctor">
            <summary>
            Default constructor. It constructs the componet and 
            sets variables to their defualt values.
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.GrenadeAttackComponent.#ctor(System.Int32)">
            <summary>
            Constructor that takes a damage input parameter. It sets
            variables to their default values.
            </summary>
            <param name="damageIn">An integer value.</param>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.GrenadeAttackComponent.DoAttack">
            <summary>
            Activates GameObject attack.
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.GrenadeAttackComponent.GetAttackRectangle(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Calculates a specialized attack area for grenade which 
            is used to check if a gameObejct is hit by another object's
            attack.
            </summary>
            <param name="gameObject">The gameObject that is attacking.</param>
            <returns>The attack area rectangle</returns>
        </member>
        <member name="T:BirdWarsTest.AttackComponents.PlayerAttackComponent">
            <summary>
            PlayerAttackComponent inherits from AttackComponent.
            It produces modified attacks that are used by player gameObjects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.PlayerAttackComponent.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.PlayerAttackComponent.#ctor(System.Int32)">
            <summary>
            Constructor that takes a damage input parameter.
            </summary>
            <param name="damageIn">An interger value</param>
        </member>
        <member name="M:BirdWarsTest.AttackComponents.PlayerAttackComponent.GetAttackRectangle(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Calculates a specialized attack area which is
            used to check if a gameObject is being hit by another object's
            attack.
            </summary>
            <param name="gameObject">The gameObject that is attacking.</param>
            <returns></returns>
        </member>
        <member name="T:BirdWarsTest.Database.Account">
            <summary>
            Stores variables necessary for game statistics.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.Account.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.Account.#ctor(BirdWarsTest.Database.Account)">
            <summary>
            Copy constructor that takes another account
            as input.
            </summary>
            <param name="accountIn">An existing account.</param>
        </member>
        <member name="M:BirdWarsTest.Database.Account.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor that takes an accountId and a
            userId as input.
            </summary>
            <param name="accountId_In">The instance Id.</param>
            <param name="userId_In">The user Id associated with this account.</param>
        </member>
        <member name="M:BirdWarsTest.Database.Account.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor to fill all variables ina account.
            </summary>
            <param name="accountId_In">The instance Id.</param>
            <param name="userId_In">The user Id associated with this account.</param>
            <param name="totalMatchesPlayedIn">An integer value.</param>
            <param name="matchesWon_In">An integer value.</param>
            <param name="matchesLost_In">An integer value.</param>
            <param name="matchesSurvived_In">An integer value.</param>
            <param name="money_In">An integer value.</param>
            <param name="secondsIn">An integer value.</param>
        </member>
        <member name="M:BirdWarsTest.Database.Account.AddMoney(System.Int32)">
            <summary>
            Add money acquired in game to total.
            </summary>
            <param name="amount">An integer value. The amount of money acquired.</param>
        </member>
        <member name="P:BirdWarsTest.Database.Account.AccountId">
            <Value>The AccountId Property of AttackComponent.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.Account.UserId">
            <Value>The UserId Property of AttackComponent.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.Account.TotalMatchesPlayed">
            <Value>The TotalMatchesPlayed Property of Account.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.Account.MatchesWon">
            <Value>The MatchesWon Property of Account.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.Account.MatchesLost">
            <Value>The MatchesLost Property of Account.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.Account.MatchesSurvived">
            <Value>The MatchesSurvived Property of Account.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.Account.Money">
            <Value>The Money Property of Account.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.Account.Seconds">
            <Value>The Seconds Property of Account.</Value>
        </member>
        <member name="T:BirdWarsTest.Database.AccountDAO">
            <summary>
            Account Data Access Object used to retrieve accounts
            from the MySql Database.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.AccountDAO.Create(BirdWarsTest.Database.Account)">
            <summary>
            Creates a new instance of Account in the database.
            </summary>
            <param name="account">An existing account instance.</param>
            <returns>Bool indicating method success or failure.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.AccountDAO.Delete(System.Int32)">
            <summary>
            Deletes an account from the database.
            </summary>
            <param name="userId">An integer value representing a userId.</param>
            <returns>Bool indicating methos success or failure.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.AccountDAO.Read(System.Int32)">
            <summary>
            Gets account information that matches the userId
            entered as a parameter.
            </summary>
            <param name="userId">An integer value representing a userId.</param>
            <returns>An account instance.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.AccountDAO.ReadAll">
            <summary>
            Gets a list of all accounts in the database.
            </summary>
            <returns>A list with all accounts.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.AccountDAO.Update(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates a specific account that matches the userId parameter.
            </summary>
            <param name="userId">An integer value representing a userId.</param>
            <param name="totalMatchesPlayed">An integer value.</param>
            <param name="matchesWon">An integer value.</param>
            <param name="matchesLost">An integer value.</param>
            <param name="matchesSurvived">An integer value.</param>
            <param name="money">An integer value.</param>
            <param name="seconds">An integer value.</param>
            <returns>Bool indicating method success or failure/</returns>
        </member>
        <member name="T:BirdWarsTest.Database.Connection">
            <summary>
            Class that handles connecting to the MySqlServer.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.Connection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.Connection.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor used to specify a specific MySqlserver connection.
            </summary>
            <param name="server_In">Ip address of the server.</param>
            <param name="user_In">Server username.</param>
            <param name="database_In">Name of the desired database.</param>
            <param name="port_In">Port input parameter.</param>
            <param name="password_In">Database password input parameter.</param>
        </member>
        <member name="M:BirdWarsTest.Database.Connection.StartConnection">
            <summary>
            Starts a connection to the MySqlserver.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.Connection.StopConnection">
            <summary>
            Stops the current MySqlserver connection.
            </summary>
        </member>
        <member name="P:BirdWarsTest.Database.Connection.DatabaseConnection">
            <Value>Variable that stores connection.</Value>
        </member>
        <member name="T:BirdWarsTest.Database.GameDatabase">
            <summary>
            Class that stores Data Access Objects used to retrieve users
            and accounts.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.GameDatabase.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.GameDatabase.UpdateUserPassword(System.String,System.String)">
            <summary>
            Updates user password. Takes the email of the user soliciting
            password change.
            </summary>
            <param name="email">String. Email of the user.</param>
            <param name="newPassword">String. The new password.</param>
        </member>
        <member name="M:BirdWarsTest.Database.GameDatabase.UpdateUserInformation(BirdWarsTest.Database.User,BirdWarsTest.Database.Account)">
            <summary>
            Updates the user and accont information.
            </summary>
            <param name="userIn">New user data.</param>
            <param name="accountIn">New account data.</param>
        </member>
        <member name="M:BirdWarsTest.Database.GameDatabase.DoesUsernameExist(System.String)">
            <summary>
            Checks if any of the registered users are using the same 
            userame.
            </summary>
            <param name="username">The username to look for.</param>
            <returns></returns>
        </member>
        <member name="P:BirdWarsTest.Database.GameDatabase.Users">
            <Value>UserDAO</Value>
        </member>
        <member name="P:BirdWarsTest.Database.GameDatabase.Accounts">
            <Value>AccountDAO</Value>
        </member>
        <member name="T:BirdWarsTest.Database.IAccountDAO">
            <summary>
            Interface of Account Data Access Object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.IAccountDAO.Create(BirdWarsTest.Database.Account)">
            <summary>
            Create method.
            </summary>
            <param name="account">An existing account instance.</param>
            <returns>bool</returns>
        </member>
        <member name="M:BirdWarsTest.Database.IAccountDAO.ReadAll">
            <summary>
            Read Method
            </summary>
            <returns>An account list.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.IAccountDAO.Read(System.Int32)">
            <summary>
            Read method.
            </summary>
            <param name="userId">User Id of desired account.</param>
            <returns>An account</returns>
        </member>
        <member name="M:BirdWarsTest.Database.IAccountDAO.Update(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Update method.
            </summary>
            <param name="userId">An integer value.</param>
            <param name="totalMatchesPlayed">An integer value.</param>
            <param name="matchesWon">An integer value.</param>
            <param name="matchesLost">An integer value.</param>
            <param name="matchesSurvived">An integer value.</param>
            <param name="money">An integer value.</param>
            <param name="seconds">An integer value.</param>
            <returns>bool</returns>
        </member>
        <member name="M:BirdWarsTest.Database.IAccountDAO.Delete(System.Int32)">
            <summary>
            Delete method.
            </summary>
            <param name="userId">UserId</param>
            <returns>bool</returns>
        </member>
        <member name="T:BirdWarsTest.Database.IUserDAO">
            <summary>
            Interface for user Data Access Object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.IUserDAO.Create(BirdWarsTest.Database.User)">
            <summary>
            Create method.
            </summary>
            <param name="user">An existing user instance.</param>
            <returns>bool</returns>
        </member>
        <member name="M:BirdWarsTest.Database.IUserDAO.ReadAll">
            <summary>
            Read method.
            </summary>
            <returns>A user list.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.IUserDAO.Read(System.String)">
            <summary>
            Read method.
            </summary>
            <param name="email">Email of desired User.</param>
            <returns>A user</returns>
        </member>
        <member name="M:BirdWarsTest.Database.IUserDAO.Read(System.String,System.String)">
            <summary>
            Read method
            </summary>
            <param name="email">Email of desired user.</param>
            <param name="password">Password of desired user.</param>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Database.IUserDAO.Update(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update method.
            </summary>
            <param name="userId">An integer value.</param>
            <param name="names">A string value.</param>
            <param name="lastName">A string value.</param>
            <param name="username">A string value.</param>
            <param name="email">A string value.</param>
            <param name="password">A string value.</param>
            <returns>bool</returns>
        </member>
        <member name="M:BirdWarsTest.Database.IUserDAO.Delete(System.Int32)">
            <summary>
            Delete method.
            </summary>
            <param name="userId">UserOd of desired user.</param>
            <returns>bool</returns>
        </member>
        <member name="T:BirdWarsTest.Database.LoginSession">
            <summary>
            Stores the current user session information.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.LoginSession.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.LoginSession.#ctor(BirdWarsTest.Database.User,BirdWarsTest.Database.GameDatabase)">
            <summary>
            Creates a user sesion that is logged in
            with entered user's stored information.
            </summary>
            <param name="userIn">An existing user instance.</param>
            <param name="database">The gamedatabase.</param>
        </member>
        <member name="M:BirdWarsTest.Database.LoginSession.Login(BirdWarsTest.Database.User,BirdWarsTest.Database.Account)">
            <summary>
            Retrieves user information and sets state to logged in.
            </summary>
            <param name="userIn">An existing user instance.</param>
            <param name="accountIn">An existing account instance.</param>
        </member>
        <member name="M:BirdWarsTest.Database.LoginSession.Logout">
            <summary>
            Removes user information and sets state to logged out.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.LoginSession.UpdateRoundStatistics(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Updates account data of the current user.
            </summary>
            <param name="isLocalPlayerDead">Bool stating if player is dead or alive.</param>
            <param name="didLocalPlayerWin">Bool stating if local player won round.</param>
            <param name="remainingRoundTime">Time left in game round.</param>
        </member>
        <member name="P:BirdWarsTest.Database.LoginSession.IsLoggedIn">
            <Value>States if this session is logged in.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.LoginSession.CurrentUser">
            <Value>The current logged in user instance.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.LoginSession.CurrentAccount">
            <Value>The current account of logged in user instance.</Value>
        </member>
        <member name="T:BirdWarsTest.Database.PasswordChangeManager">
            <summary>
            Class that handles password reset code generation,
            validation and password reset.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.PasswordChangeManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.PasswordChangeManager.SetChangeCode(System.String)">
            <summary>
            Sets a random code for password reset email.
            </summary>
            <param name="userEmail">The email of the user that solicited the password change.</param>
        </member>
        <member name="M:BirdWarsTest.Database.PasswordChangeManager.ResetPassword(BirdWarsTest.Database.GameDatabase,System.String,System.String,System.String)">
            <summary>
            Checks if the entered code value equals the generated code value
            and resets password if true.
            </summary>
            <param name="gameDatabase">Current database.</param>
            <param name="email">The email of the user that solicited the password change.</param>
            <param name="password">The user's new password</param>
            <param name="code">The confirmation code to check against.</param>
            <returns>bool indicating method success or failure.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.PasswordChangeManager.GetResetCode(System.String)">
            <summary>
            Returns the generated code for the introduced email.
            </summary>
            <param name="email">user email.</param>
            <returns>The randomly generated code.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.PasswordChangeManager.ResetManager">
            <summary>
            Removes all password reset petitions.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.PasswordChangeManager.PasswordChangeWasSolicited(System.String)">
            <summary>
            Checks if a user solicited a password reset.
            </summary>
            <param name="userEmail">The user email.</param>
            <returns>bool that indicates if the user solicited a password reset.</returns>
        </member>
        <member name="T:BirdWarsTest.Database.User">
            <summary>
            Stores necessary user information
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.User.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.User.#ctor(BirdWarsTest.Database.User)">
            <summary>
            Copy constructor.
            </summary>
            <param name="user">An existing user instance.</param>
        </member>
        <member name="M:BirdWarsTest.Database.User.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new user with entered data.
            </summary>
            <param name="userId_In">An integer value.</param>
            <param name="name_In">A string value.</param>
            <param name="lastName_In">A string value.</param>
            <param name="username_In">A string value.</param>
            <param name="email_In">A string value.</param>
            <param name="password_In">A string value.</param>
        </member>
        <member name="M:BirdWarsTest.Database.User.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new user instance with no valid Id.
            </summary>
            <param name="name_In">A string value.</param>
            <param name="lastName_In">A string value.</param>
            <param name="username_In">A string value.</param>
            <param name="email_In">A string value.</param>
            <param name="password_In">A string value.</param>
        </member>
        <member name="P:BirdWarsTest.Database.User.UserId">
            <Value>UserId</Value>
        </member>
        <member name="P:BirdWarsTest.Database.User.Names">
            <Value>User names.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.User.LastName">
            <Value>User last names.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.User.Username">
            <Value>User username.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.User.Email">
            <Value>User email.</Value>
        </member>
        <member name="P:BirdWarsTest.Database.User.Password">
            <Value>User password.</Value>
        </member>
        <member name="T:BirdWarsTest.Database.UserDAO">
            <summary>
            User Data Access Object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Database.UserDAO.Create(BirdWarsTest.Database.User)">
            <summary>
            Creates a new instance of user in the database.
            </summary>
            <param name="user">An existing user instance.</param>
            <returns>bool indicating method success or failure.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.UserDAO.Delete(System.Int32)">
            <summary>
            Deletes a user from the database.
            </summary>
            <param name="userId">The Id of the desired user.</param>
            <returns>bool indicating method success or failure.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.UserDAO.Read(System.String)">
            <summary>
            Retrieves a user from the database using the email
            entered.
            </summary>
            <param name="email">The desired user email.</param>
            <returns>bool indicating method success or failure.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.UserDAO.Read(System.String,System.String)">
            <summary>
            Retrieves a user from the database whose email and
            password match the entered values.
            </summary>
            <param name="email">The desired user email.</param>
            <param name="password">The desired user password.</param>
            <returns>bool indicating method success or failure.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.UserDAO.ReadAll">
            <summary>
            Retrieves a list of all the users in the database.
            </summary>
            <returns>A list of users.</returns>
        </member>
        <member name="M:BirdWarsTest.Database.UserDAO.Update(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates a user in the database whose id matches the entered
            userId value.
            </summary>
            <param name="userId">The desired user's Id.</param>
            <param name="names">A string value.</param>
            <param name="lastName">A string value.</param>
            <param name="username">A string value.</param>
            <param name="email">A string value.</param>
            <param name="password">A string value.</param>
            <returns>bool indicating method success or failure.</returns>
        </member>
        <member name="T:BirdWarsTest.EffectComponents.CoinEffectComponent">
            <summary>
            Produces modified item effect relevant to a coin item.
            </summary>
        </member>
        <member name="M:BirdWarsTest.EffectComponents.CoinEffectComponent.#ctor(System.Int32)">
            <summary>
            Creates CoinEffectComponent and set coin value.
            </summary>
            <param name="coinValueIn">The desired coin value.</param>
        </member>
        <member name="M:BirdWarsTest.EffectComponents.CoinEffectComponent.DoEffect(BirdWarsTest.Network.INetworkManager,BirdWarsTest.GameObjects.ObjectManagers.PlayerManager)">
            <summary>
            Executes coin effect on current user.
            </summary>
            <param name="networkManager">Game network manager.</param>
            <param name="playerManager">Player manager.</param>
        </member>
        <member name="T:BirdWarsTest.EffectComponents.EffectComponent">
            <summary>
            Base Effect component class of all gameObjects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.EffectComponents.EffectComponent.DoEffect(BirdWarsTest.Network.INetworkManager,BirdWarsTest.GameObjects.ObjectManagers.PlayerManager)">
            <summary>
            Executes the effect on a given gameObject.
            </summary>
            <param name="networkManager">Game network manager</param>
            <param name="playerManager">Player manager</param>
        </member>
        <member name="T:BirdWarsTest.EffectComponents.GrenadePickupEffectComponent">
            <summary>
            Produces a modified item effect relevant to a grenade item.
            </summary>
        </member>
        <member name="M:BirdWarsTest.EffectComponents.GrenadePickupEffectComponent.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.EffectComponents.GrenadePickupEffectComponent.DoEffect(BirdWarsTest.Network.INetworkManager,BirdWarsTest.GameObjects.ObjectManagers.PlayerManager)">
            <summary>
            Executes grenade effect on local player.
            </summary>
            <param name="networkManager">Game network manager.</param>
            <param name="playerManager">Player manager.</param>
        </member>
        <member name="T:BirdWarsTest.EffectComponents.RecoveryEffectComponent">
            <summary>
            Produces a recovery item effect relevant to a recovery item.
            </summary>
        </member>
        <member name="M:BirdWarsTest.EffectComponents.RecoveryEffectComponent.#ctor(System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="healthValueIn"></param>
        </member>
        <member name="M:BirdWarsTest.EffectComponents.RecoveryEffectComponent.DoEffect(BirdWarsTest.Network.INetworkManager,BirdWarsTest.GameObjects.ObjectManagers.PlayerManager)">
            <summary>
            Executes recovery effect on local player.
            </summary>
            <param name="networkManager">Game network manager.</param>
            <param name="playerManager">Player manager.</param>
        </member>
        <member name="T:BirdWarsTest.Game1">
             <summary>
             The main game class. Handles update and render calls,
            stores the main game classes.
             </summary>
        </member>
        <member name="M:BirdWarsTest.Game1.#ctor(BirdWarsTest.Network.INetworkManager)">
            <summary>
            Constructs the game instance with the specified network
            manager type.
            </summary>
            <param name="networkManagerIn"></param>
        </member>
        <member name="M:BirdWarsTest.Game1.Initialize">
            <summary>
            Initialized internal components.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Game1.LoadContent">
            <summary>
            Sets the graphics device to the spritebatch and initializes
            states.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Game1.UnloadContent">
            <summary>
            Unloads all necessary game assets.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Game1.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the update calls in all states for every frame.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:BirdWarsTest.Game1.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws all gameobjects to the screen.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="T:BirdWarsTest.GameObjects.GameObject">
            <summary>
            The main GameObject class. It is the basic structure of all
            objects in application.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.#ctor(BirdWarsTest.GraphicComponents.GraphicsComponent,BirdWarsTest.InputComponents.InputComponent,BirdWarsTest.GameObjects.Identifiers,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a gameObject with null Health, Attack and effect componentes.
            </summary>
            <param name="graphics_In">Graphics component</param>
            <param name="input_In">Input component</param>
            <param name="id_In">Object identifier.</param>
            <param name="position_in">Object position.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.#ctor(BirdWarsTest.GraphicComponents.GraphicsComponent,BirdWarsTest.InputComponents.InputComponent,BirdWarsTest.GameObjects.Identifiers,System.Single,System.Single)">
            <summary>
            Creates a gameobject at the center of the gamewindow horizontal axis.
            Also has null Health, Attack and Effect components.
            </summary>
            <param name="graphics_In">Graphics component</param>
            <param name="input_In">Input component</param>
            <param name="id_In">Object identifier.</param>
            <param name="screenWidth">Object x position.</param>
            <param name="screenHeight">Object y position.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.#ctor(BirdWarsTest.GraphicComponents.GraphicsComponent,BirdWarsTest.InputComponents.InputComponent,BirdWarsTest.HealthComponents.HealthComponent,BirdWarsTest.GameObjects.Identifiers,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a gameObject with a null Attack and effect component.
            </summary>
            <param name="graphics_In">Graphics component</param>
            <param name="input_In">Input component</param>
            <param name="health_In">Health component</param>
            <param name="id_In">Object identifier</param>
            <param name="position_in">Object position</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.#ctor(BirdWarsTest.GraphicComponents.GraphicsComponent,BirdWarsTest.InputComponents.InputComponent,BirdWarsTest.HealthComponents.HealthComponent,BirdWarsTest.AttackComponents.AttackComponent,BirdWarsTest.GameObjects.Identifiers,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a gameObject with a null effect component.
            </summary>
            <param name="graphics_In">Graphics component</param>
            <param name="input_In">Input Component</param>
            <param name="health_In">Health component</param>
            <param name="attackIn">Attack component</param>
            <param name="id_In">Object identifier</param>
            <param name="position_in">Object position</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.#ctor(BirdWarsTest.GraphicComponents.GraphicsComponent,BirdWarsTest.InputComponents.InputComponent,BirdWarsTest.HealthComponents.HealthComponent,BirdWarsTest.EffectComponents.EffectComponent,BirdWarsTest.GameObjects.Identifiers,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a gameObejct with a null Attack component.
            </summary>
            <param name="graphics_In">Graphics component</param>
            <param name="input_In">Input component</param>
            <param name="health_In">Health component</param>
            <param name="effectIn">Effect component</param>
            <param name="id_In">Object identifier</param>
            <param name="position_in">Object position</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates game Object with game time.
            </summary>
            <param name="gameTime">game time</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.Update(Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Updates game object with keyboard state.
            </summary>
            <param name="state">keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.Update(Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Updates game object with keyboard state and game state.
            </summary>
            <param name="state">keyboard state</param>
            <param name="gameState">Game state</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.Update(Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates game object with keyboard state, game state, and game time.
            </summary>
            <param name="state">Keyboard state</param>
            <param name="gameState">Hame state</param>
            <param name="gameTime">Game time</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Checks if the graphics component is null and renders the gameObejct
            if it is not.
            </summary>
            <param name="batch">Game spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@,BirdWarsTest.HealthComponents.HealthComponent)">
            <summary>
            Used to draw and update the lifebar graphics component.
            </summary>
            <param name="batch">Game spritebatch</param>
            <param name="health">Player health</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Used to render the game obejct if it is withis the camera bounds render 
            area rectangle.
            </summary>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Cmaera area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.CenterXWidth(System.Single,System.Single)">
            <summary>
            Centers the X position of the gameObject relative
            to the screen size.
            </summary>
            <param name="screenWidth">Game screen width</param>
            <param name="textureWidth">Texture width</param>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.RecenterXWidth(System.Single)">
            <summary>
            recenters the x Width of the game Object.
            </summary>
            <param name="screenWidth"> Screen width.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.GameObject.GetRectangle">
            <summary>
            Returns the gameObject area rectangle.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BirdWarsTest.GameObjects.GameObject.Graphics">
            <value>The object graphics component.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.GameObject.Input">
            <value>The object input component.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.GameObject.Health">
            <value>The object Health component.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.GameObject.Attack">
            <value>The object attack component.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.GameObject.Effect">
            <value>The object effect component.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.GameObject.Identifier">
            <value>The object identifier.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.GameObject.Position">
            <value>The current object position.</value>
        </member>
        <member name="T:BirdWarsTest.GameObjects.Identifiers">
            <summary>
            Holds all possible gameObject values.
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.LoginLogo">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.LoginBox1">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.RegisterBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.PasswordBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.ConfigurationBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Background">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.TextGraphics">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.TextArea">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.PasswordArea">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Button1">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Button2">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Decoration">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.MenuOption">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Selector">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.LanguageSelector">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.ChatMessageSender">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.ChatMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Player1">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Player2">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Player3">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Player4">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Player5">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Player6">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Player7">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Player8">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.LifeBar">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Timer">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Floor">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.ItemBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.Coin">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.PigeonMilk">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.GameObjects.Identifiers.EggGrenade">
            <summary>
            
            </summary>
        </member>
        <member name="T:BirdWarsTest.GameObjects.ObjectManagers.ChatMessageManager">
             <summary>
             Handles the creation, organization, display and removal
            of chat messages used in WaitingRoomState.
             </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ChatMessageManager.#ctor(Microsoft.Xna.Framework.Content.ContentManager,BirdWarsTest.Utilities.StringManager,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Creates an isntance of ChatMessageManager.
            </summary>
            <param name="contentIn">Game contentManager</param>
            <param name="stringManager">Game string manager.</param>
            <param name="chatBoardBoundariesIn">Chat box area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ChatMessageManager.HandleChatMessage(System.String,System.String,System.String)">
            <summary>
            Handles the values from an incoming chatMessage.
            </summary>
            <param name="incomingUsername">The username of the user that sent the message.</param>
            <param name="message">The message body.</param>
            <param name="currentUsername">The username if the current user.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ChatMessageManager.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the chat message game objects on the screen.
            </summary>
            <param name="batch">Game spritebatch.</param>
        </member>
        <member name="T:BirdWarsTest.GameObjects.ObjectManagers.ChatUsernameManager">
            <summary>
            Handles the username boxes and displays the rounds players
            usernames.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ChatUsernameManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ChatUsernameManager.AddObjects(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates username box game objects.
            </summary>
            <param name="content">Game contentManager.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ChatUsernameManager.ClearObjects">
            <summary>
            Clears the username box game objects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ChatUsernameManager.HandleRoundStateChangeMessage(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Handles the incoming RoundStateChangedMessage.
            </summary>
            <param name="incomingMessage">The incoming message.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ChatUsernameManager.HandleRoundCreatedMessage(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Sets the usernames in each chat username box.
            </summary>
            <param name="incomingMessage">The incoming round created message.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ChatUsernameManager.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the chat box gameobjects and player usernames.
            </summary>
            <param name="batch">Game spritebatch</param>
        </member>
        <member name="T:BirdWarsTest.GameObjects.ObjectManagers.HeadsUpDisplayManager">
            <summary>
            Stores, updates and renders the game obejcts responsible
            for displaying the local player lifebar and round timer.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.HeadsUpDisplayManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.HeadsUpDisplayManager.InitializeInterfaceComponents(Microsoft.Xna.Framework.Content.ContentManager,BirdWarsTest.States.StateHandler)">
            <summary>
            Creates the lifebar a round time game objects.
            </summary>
            <param name="content">Game contentManager.</param>
            <param name="handler">Game state handler.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.HeadsUpDisplayManager.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the round time gamobject.
            </summary>
            <param name="gameTime">Game time class that holds elapsed frame time.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.HeadsUpDisplayManager.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@,BirdWarsTest.HealthComponents.HealthComponent)">
            <summary>
            Draws the gameObjects on the screen.
            </summary>
            <param name="batch">Game spritebatch.</param>
            <param name="localPlayerHealth">The local player's current health.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.HeadsUpDisplayManager.HandleUpdateRoundTimeMessage(System.Single)">
            <summary>
            Resets the round time to match the server round time.
            </summary>
            <param name="remainingTime">Server time.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.HeadsUpDisplayManager.IsRoundTimeOver">
            <summary>
            Checks if the round time up over.
            </summary>
            <returns>bool indicating whether round time is over.</returns>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.HeadsUpDisplayManager.ClearAllDisplayObjects">
            <summary>
            Destroys all gameObjects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.HeadsUpDisplayManager.GetRemainingRoundTime">
            <summary>
            Retrieves the remaining round time from the round time game object.
            </summary>
            <returns>An integer value of the remaining round time.</returns>
        </member>
        <member name="T:BirdWarsTest.GameObjects.ObjectManagers.ItemManager">
            <summary>
            Handles the item game objects creationg, destruction,
            update, and display.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Initializes a new instance of itemManager.
            </summary>
            <param name="contentIn">Game contentManager.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.SetMapBounds(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Sets the area limit of the game world.
            </summary>
            <param name="mapBoundsIn">Game world area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.SpawnBoxes">
            <summary>
            Spawns the first 10 boxes of the game round at random positions.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.SpawnConsumableItems(BirdWarsTest.Network.INetworkManager)">
            <summary>
            Sends a SpawnConsumablesMessage to server.
            </summary>
            <param name="networkManager">Game networkmanager.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.SpawnBox(BirdWarsTest.Network.INetworkManager)">
            <summary>
            If the networkManager is the server, spawns a box at 
            a random position then sends a SpawnBoxMessage to all
            clients.
            </summary>
            <param name="networkManager">game networkManager.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.SpawnGrenade(BirdWarsTest.Network.INetworkManager,BirdWarsTest.GameObjects.ObjectManagers.PlayerManager)">
            <summary>
            Sends a spawnGrenadeMessage to server.
            </summary>
            <param name="networkManager">Game networkManager.</param>
            <param name="playerManager">Player manager.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.HandleSpawnBoxMessage(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates a box at the location written in the message.
            </summary>
            <param name="incomingMessage">The incoming spawn box message.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.HandleSpawnConsumablesMessage(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Spawns the amount adn type of consumable items written 
            in the message.
            </summary>
            <param name="incomingMessage">The incoming SpawnConsumablesMessage.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.HandleBoxDamageMessage(BirdWarsTest.Network.Messages.BoxDamageMessage)">
            <summary>
            Damages the box written in the message to match the boxes in
            other game clients and server.
            </summary>
            <param name="boxDamageMessage">The incoming BoxDamageMessage.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.HandlePickedUpItemMessage(System.Int32)">
            <summary>
            Removes any items from hte game that have already been picked up
            by other players.
            </summary>
            <param name="itemIndex">The incoming PickedUpItemmessage.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.HandleSpawnGrenadeMessage(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Spawns a grenade at the position and with the velocity and speed
            written in the message.
            </summary>
            <param name="grenadePosition">The grenade position.</param>
            <param name="grenadeDirection">The grenade direction.</param>
            <param name="grenadeSpeed">The grenade speed.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.Update(BirdWarsTest.Network.INetworkManager,BirdWarsTest.GameObjects.ObjectManagers.PlayerManager,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Updates all gameObjects, imposes map boundaries, and handles
            damage.
            </summary>
            <param name="networkManager">Game network manager.</param>
            <param name="playerManager">Player manager.</param>
            <param name="gameTime">The amount of elapsed game time.</param>
            <param name="mapBounds">Game world area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws all objects that are within the camera render 
            bounds on the screen.
            </summary>
            <param name="batch">Game spritebatch.</param>
            <param name="cameraRenderBounds">The current camera render area rectangle.</param>
            <param name="cameraBounds">The current area that is seen by the user.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.ClearAllItems">
            <summary>
            Removes all gameObjects from the manager and
            reset values.
            </summary>
        </member>
        <member name="P:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.Boxes">
            <value>The list game boxes.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.ConsumableItems">
            <value>The list of game consumable items.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.ObjectManagers.ItemManager.EggGrenades">
            <value>The list game egg grenades.</value>
        </member>
        <member name="T:BirdWarsTest.GameObjects.ObjectManagers.MapManager">
            <summary>
            Handles the creation, and display of the game map.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.MapManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.MapManager.InitializeMapTiles(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates the map from the list of tile textures.
            </summary>
            <param name="content">game contentManager.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.MapManager.GetMapBounds">
            <summary>
            Calculates the map area rectangle with the game Tiles.
            </summary>
            <returns>A rectangle of the map area.</returns>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.MapManager.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the game tiles to the screen.
            </summary>
            <param name="batch">Game spritebatch.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.MapManager.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the objects that are withing the camera render
            bounds to the screen.
            </summary>
            <param name="batch"></param>
            <param name="cameraRenderBounds"></param>
            <param name="cameraBounds"></param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.MapManager.ClearAllTiles">
            <summary>
            Removes al gameObjects from tile list and resets tile values.
            </summary>
        </member>
        <member name="T:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager">
            <summary>
            Handles the creation, update and display of player
            game objects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.CreatePlayers(Microsoft.Xna.Framework.Content.ContentManager,BirdWarsTest.States.StateHandler,System.String[],System.String)">
            <summary>
            Creates the players that are in the game round.
            </summary>
            <param name="content">Game content manager.</param>
            <param name="handler">game statehandler.</param>
            <param name="usernames">The list of player usernames.</param>
            <param name="localUsername">The local player username.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.CreatePlayers(Microsoft.Xna.Framework.Content.ContentManager,BirdWarsTest.States.StateHandler,Lidgren.Network.NetIncomingMessage,System.String)">
            <summary>
            Creates the players written in the incoming game message.
            </summary>
            <param name="content">Game content manager.</param>
            <param name="handler">Game state handler.</param>
            <param name="incomingMessage">THe incoming message.</param>
            <param name="localUsername">The local player username.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.HandlePlayerStateChangeMessage(Lidgren.Network.NetIncomingMessage,BirdWarsTest.Network.Messages.PlayerStateChangeMessage)">
            <summary>
            Updates remote player positions using incoming
            player state change messages.
            </summary>
            <param name="incomingMessage">The incoming PlayerStateChangeMessage.</param>
            <param name="stateChangeMessage">The incoming PlayerStateChangeMessage.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.HandlePlayerAttackMessage(BirdWarsTest.Network.Messages.PlayerAttackMessage)">
            <summary>
            Does player attack.
            </summary>
            <param name="attackMessage">The incoming PlayerAttackMessage.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.HandlePlayerDiedMessage(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Kills the player in the message.
            </summary>
            <param name="playerId">The incoming PlayerDiedMessage.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.GetLocalPlayer">
            <summary>
            Returns the gameObject that corresponds to
            the current user.
            </summary>
            <returns>The local player gameObject.</returns>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.GetPlayer(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Get a player from the list of players.
            </summary>
            <param name="id">The id of the player object.</param>
            <returns>The player gameObject.</returns>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.Update(BirdWarsTest.States.GameState,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.Rectangle,BirdWarsTest.Network.INetworkManager)">
            <summary>
            Updates the gameobjects, handles player attacks and checks
            if the local player is dead.
            </summary>
            <param name="gameState">The current game state.</param>
            <param name="gameTime">Elapsed game time.</param>
            <param name="state">The keyboard state.</param>
            <param name="mapBounds">The game world area rectangle.</param>
            <param name="networkManager">Game network manager.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the objects that are within the camera render
            bounds to the screen.
            </summary>
            <param name="batch">Game spritebatch.</param>
            <param name="cameraRenderBounds">The camera render area rectangle.</param>
            <param name="cameraBounds">The camera area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.ClearAllPlayers">
            <summary>
            Removes all gameobjects and resets manager.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.DidLocalPlayerWin">
            <summary>
            Checks if the local player is alive and all other
            players are not.
            </summary>
            <returns>bool indicating if player won or not.</returns>
        </member>
        <member name="M:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.GetNumberOfPlayersStillAlive">
            <summary>
            Returns the number of players whose health > 0.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.Players">
            <value>The list of player objects.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.CreatedPlayers">
            <value>bool indicating if players have been created.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.LocalPlayerIndex">
            <value>The index of the object that corresponds to the current user.</value>
        </member>
        <member name="P:BirdWarsTest.GameObjects.ObjectManagers.PlayerManager.GrenadeAmount">
            <value>The number of grenades in inventory.</value>
        </member>
        <member name="T:BirdWarsTest.GameRounds.Camera2D">
            <summary>
            Camera used to move and see around the game world.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameRounds.Camera2D.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameRounds.Camera2D.#ctor(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates the camera at the specified position.
            </summary>
            <param name="cameraPosition">The camera position.</param>
        </member>
        <member name="M:BirdWarsTest.GameRounds.Camera2D.Update(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle,System.Boolean)">
            <summary>
            Updates the camera movement and keeps it within the game
            world limits.
            </summary>
            <param name="position">Local player position.</param>
            <param name="mapBoundary">The game world area rectangle.</param>
            <param name="objectRect">The local player area rectangle.</param>
            <param name="createdPlayers">Bool indicating whether players were created.</param>
        </member>
        <member name="M:BirdWarsTest.GameRounds.Camera2D.SetCameraPosition(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Set the camera position to the specified position.
            </summary>
            <param name="position"> the desired position.</param>
        </member>
        <member name="M:BirdWarsTest.GameRounds.Camera2D.GetCameraBounds">
            <summary>
            Retrieves the current camera position.
            </summary>
            <returns>The current area rectangle.</returns>
        </member>
        <member name="M:BirdWarsTest.GameRounds.Camera2D.GetCameraRenderBounds">
            <summary>
            calculates and retrieves the render area rectangle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.GameRounds.Camera2D.ResetCamera">
            <summary>
            Resets the camera values.
            </summary>
        </member>
        <member name="P:BirdWarsTest.GameRounds.Camera2D.CameraPosition">
            <value>The current camera position.</value>
        </member>
        <member name="P:BirdWarsTest.GameRounds.Camera2D.IsCameraSet">
            <value>bool indiciating if camera is following the player.</value>
        </member>
        <member name="T:BirdWarsTest.GameRounds.GameRound">
            <summary>
            Stores the players connected to the server, their usernames, 
            list of banned players.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.CreateRound(System.String)">
            <summary>
            Starts a gameRound. Clears all objects and adds the
            server username the playersUsernames list.
            </summary>
            <param name="serverUsername">Server username</param>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.DestroyRound">
            <summary>
            Destroys round.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.AddPlayer(System.String,Lidgren.Network.NetConnection)">
            <summary>
            Adds a player to the game round.
            </summary>
            <param name="username">Player username</param>
            <param name="playerConnection">Player connection</param>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.RemovePlayer(System.String)">
            <summary>
            Removes a player from the game round.
            </summary>
            <param name="username">Player username</param>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.RemovePlayer(Lidgren.Network.NetConnection,System.String)">
            <summary>
            Removes a player from the gameRound.
            </summary>
            <param name="playerConnection">Player connection</param>
            <param name="username">Player username</param>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.DoBanRequest(System.String,System.String)">
            <summary>
            Processes a chat message, checks if ban
            request was made and adds ban to list of bans.
            </summary>
            <param name="chatMessage">The chat message to parse</param>
            <param name="banMessage">The ban message.</param>
            <returns>Returns the name of the player to ban.</returns>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.ResetBanPetitions">
            <summary>
            Resets the number of bans in the gameRound.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.RoomAvailable">
            <summary>
            Checks if there is room available in the game round.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.GetPlayerConnection(System.String)">
            <summary>
            Gets the connection of the player that matches the username.
            </summary>
            <param name="username">Desired player username.</param>
            <returns>The connection of the player client.</returns>
        </member>
        <member name="M:BirdWarsTest.GameRounds.GameRound.GetPlayerUsernames">
            <summary>
            Returns a list of player usernames.
            </summary>
            <returns>Returns a list of player usernames.</returns>
        </member>
        <member name="P:BirdWarsTest.GameRounds.GameRound.PlayerConnections">
            <value>The list of player conenctions.</value>
        </member>
        <member name="P:BirdWarsTest.GameRounds.GameRound.Created">
            <value>bool indicating if the round has been created..</value>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.ActiveEggGrenadeGraphicsComponent">
            <summary>
            Graphics component for an active egg grenade object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ActiveEggGrenadeGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ActiveEggGrenadeGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ActiveEggGrenadeGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.ButtonGraphicsComponent">
            <summary>
            Graphics component for a button object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ButtonGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,System.String,System.String)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
            <param name="textureName">The texture to load.</param>
            <param name="buttonText">The button text.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ButtonGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ButtonGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="P:BirdWarsTest.GraphicComponents.ButtonGraphicsComponent.Text">
            <summary>
            Gets and sets the button text.
            </summary>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.ChatMessageGraphicsComponent">
            <summary>
            Graphics component for a chat message object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ChatMessageGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates an instance of the graphcis component.
            </summary>
            <param name="content">Game manager</param>
            <param name="textureName">Texture name</param>
            <param name="usernameIn">player username</param>
            <param name="messageIn">Message body</param>
            <param name="isFromOtherUserIn">bool indicating if message is from a remote user.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ChatMessageGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ChatMessageGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.CoinGraphicsComponent">
            <summary>
            Graphics component for a coin object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.CoinGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.CoinGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.CoinGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.DecorationBoxGraphicsComponent">
            <summary>
            Graphics component for a decoration box object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.DecorationBoxGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,System.String)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
            <param name="textureName">The texture to load.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.DecorationBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.DecorationBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.DecorationGraphicsComponent">
            <summary>
            Graphics component for a decoration object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.DecorationGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,System.String)">
            <summary>
            Creates an isntance of the graphics component with the specified
            texture.
            </summary>
            <param name="content">Game content manager.</param>
            <param name="textureName">The texture to load.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.DecorationGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.DecorationGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.EggGrenadeGraphicsComponent">
            <summary>
            Graphics component for Egg grenade object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.EggGrenadeGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.EggGrenadeGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.EggGrenadeGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.FloorGraphicsComponent">
            <summary>
            Graphics component for a floor object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.FloorGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,System.String)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
            <param name="textureName">The texture to load.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.FloorGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.FloorGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.GraphicsComponent">
            <summary>
            The base class of all graphics components.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.GraphicsComponent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.GraphicsComponent.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Sets the texture to the specified texture input.
            </summary>
            <param name="texture_In"></param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.GraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.GraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.GraphicsComponent.GetTextureSize">
            <summary>
            Returns the texture size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.GraphicsComponent.SetText(System.String)">
            <summary>
            Varies.
            </summary>
            <param name="newText"></param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.GraphicsComponent.ClearText">
            <summary>
            Varies.
            </summary>
        </member>
        <member name="F:BirdWarsTest.GraphicComponents.GraphicsComponent.texture">
            <summary>
            Base texture variable.
            </summary>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.ItemBoxGraphicsComponent">
            <summary>
            Graphics component for Item box object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ItemBoxGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ItemBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.ItemBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
             Draws the texture to the screen if it's within
             the cameraBounds rectangle.
             </summary>
             <param name="gameObject">GameObject.</param>
             <param name="batch">Game spritebatch</param>
             <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.LanguageSelectorGraphicsComponent">
            <summary>
            Graphics component for a language selector object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LanguageSelectorGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,BirdWarsTest.Utilities.StringManager,BirdWarsTest.Utilities.Languages,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager</param>
            <param name="stringManager">Game string manager</param>
            <param name="currentLanguage">Current settings language.</param>
            <param name="positionIn">Object position</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LanguageSelectorGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LanguageSelectorGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LanguageSelectorGraphicsComponent.GetLeftArrowBounds">
            <summary>
            Returns the left arrow texture size.
            </summary>
            <returns>Returns the left arrow texture size.</returns>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LanguageSelectorGraphicsComponent.GetRightArrowBounds">
            <summary>
            Returns the right arrow texture size.
            </summary>
            <returns>Returns the right arrow texture size.</returns>
        </member>
        <member name="P:BirdWarsTest.GraphicComponents.LanguageSelectorGraphicsComponent.SelectedLanguage">
            <value>Current selected language</value>
        </member>
        <member name="P:BirdWarsTest.GraphicComponents.LanguageSelectorGraphicsComponent.Text">
            <value>Object text</value>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.LifeBarGraphicsComponent">
            <summary>
            Graphics component for a life bar object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LifeBarGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LifeBarGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LifeBarGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LifeBarGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,BirdWarsTest.HealthComponents.HealthComponent,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws and updates a life bar graphics component.
            </summary>
            <param name="gameObject">Game Object</param>
            <param name="health">Object Health</param>
            <param name="batch">Game spritebatch</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.LoginBoxGraphicsComponent">
            <summary>
            Graphics component for login box object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LoginBoxGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LoginBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LoginBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.LoginLogoGraphicsComponent">
            <summary>
            Graphics component for login logo object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LoginLogoGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LoginLogoGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.LoginLogoGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.MenuBoxGraphicsComponent">
            <summary>
            Graphics component for a menu box object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.MenuBoxGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.MenuBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.MenuBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.MenuOptionGraphicsComponent">
            <summary>
            Graphics component for a menu option object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.MenuOptionGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,System.String)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
            /// <param name="optionText">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.MenuOptionGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.MenuOptionGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.MenuOptionGraphicsComponent.ToggleSelect">
            <summary>
            Changes isSelected to !isSelected.
            </summary>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.PasswordAreaGraphicsComponent">
            <summary>
            Graphics component for a passwird area object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.PasswordAreaGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.PasswordAreaGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.PasswordAreaGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.PigeonMilkGraphicsComponent">
            <summary>
            Graphics component for pigeon milk objects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.PigeonMilkGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.PigeonMilkGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.PigeonMilkGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.PlayerGraphicsComponent">
            <summary>
            Graphcis component for a player object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.PlayerGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.PlayerGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.PlayerGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.RegisterBoxGraphicsComponent">
            <summary>
            Graphics component for registerBox objects
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.RegisterBoxGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an instance of the graphics component.
            </summary>
            <param name="content">Game content Manager</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.RegisterBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.RegisterBoxGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.RoundTimerGraphicsComponent">
            <summary>
            Graphics component for the round timer component.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.RoundTimerGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an instance of the graphics component.
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.RoundTimerGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen.
            </summary>
            <param name="gameObject">gameObject</param>
            <param name="batch">Game spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.RoundTimerGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.SolidRectGraphicsComponent">
            <summary>
            Graphics component for background objects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.SolidRectGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Creates an instance of the solidrectgraphicscomponent.
            </summary>
            <param name="content">Game Content manager</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.SolidRectGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the gameObject to the screen.
            </summary>
            <param name="gameObject"></param>
            <param name="batch"></param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.SolidRectGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle
            </summary>
            <param name="gameObject">Game object</param>
            <param name="batch">Game Spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.TextAreaGraphicsComponent">
            <summary>
            Graphics component for text input area objects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextAreaGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,System.String)">
            <summary>
            Creates an isntance of the graphics component.
            </summary>
            <param name="content">Game content manager.</param>
            <param name="textureName">The texture to load.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextAreaGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen at the object's position.
            </summary>
            <param name="gameObject">The game object</param>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextAreaGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if it's within
            the cameraBounds rectangle.
            </summary>
            <param name="gameObject">GameObject.</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="T:BirdWarsTest.GraphicComponents.TextGraphicsComponent">
            <summary>
            The grahics compoennt for simple text objects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,System.String,System.String)">
            <summary>
            Creates an instance of Text Graphics Component.
            </summary>
            <param name="content">Game conteng Manager</param>
            <param name="textIn">Text value</param>
            <param name="fontName">Font name</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextGraphicsComponent.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.Color,System.String,System.String)">
            <summary>
            Creates an instance of a text graphics component 
            that is rendered with a specified color.
            </summary>
            <param name="content">Game content manager.</param>
            <param name="colorIn">Specified Color</param>
            <param name="textIn">Specified text</param>
            <param name="fontName">Font name</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the texture to the screen.
            </summary>
            <param name="gameObject">Game object</param>
            <param name="batch">Game spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextGraphicsComponent.Render(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the texture to the screen if its within the camera bounds 
            rectangle.
            </summary>
            <param name="gameObject">Game object</param>
            <param name="batch">Game spritebatch</param>
            <param name="cameraBounds">Current camera area rectangle.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextGraphicsComponent.GetTextureSize">
            <summary>
            Returns the texture string size.
            </summary>
            <returns>Returns the texture string size.</returns>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextGraphicsComponent.SetText(System.String)">
            <summary>
            Sets the current text.
            </summary>
            <param name="newText"> specified text.</param>
        </member>
        <member name="M:BirdWarsTest.GraphicComponents.TextGraphicsComponent.ClearText">
            <summary>
            Clears the text.
            </summary>
        </member>
        <member name="T:BirdWarsTest.HealthComponents.HealthComponent">
            <summary>
            Health component for all gameObjects. Handles damage, 
            healing, and has health related utilies.
            </summary>
        </member>
        <member name="M:BirdWarsTest.HealthComponents.HealthComponent.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.HealthComponents.HealthComponent.#ctor(System.Int32)">
            <summary>
            Creates instance of  health component with specified
            HP.
            </summary>
            <param name="maxHealthIn">Max HP</param>
        </member>
        <member name="M:BirdWarsTest.HealthComponents.HealthComponent.TakeDamage(System.Int32)">
            <summary>
            If the gameobject hasn't taken damage,
            subtract damage from remaining health.	
            </summary>
            <param name="damage">recieved damage.</param>
        </member>
        <member name="M:BirdWarsTest.HealthComponents.HealthComponent.TakeFullDamage">
            <summary>
            Kills object.
            </summary>
        </member>
        <member name="M:BirdWarsTest.HealthComponents.HealthComponent.Heal(System.Int32)">
            <summary>
            Replenishes health by specified amount.
            </summary>
            <param name="health"></param>
        </member>
        <member name="M:BirdWarsTest.HealthComponents.HealthComponent.IsDead">
            <summary>
            Checks if Health > 0.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:BirdWarsTest.HealthComponents.HealthComponent.GetRemainingHealthPercent">
            <summary>
            Used by life bar graphics component to calculate
            color of bar and length.
            </summary>
            <returns>float.</returns>
        </member>
        <member name="M:BirdWarsTest.HealthComponents.HealthComponent.UpdateCoolDownTimer">
            <summary>
            Updates the TookDamageTimer.
            </summary>
        </member>
        <member name="M:BirdWarsTest.HealthComponents.HealthComponent.GetPlayerHitBox(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Returns a calculated area rectangle used to check if payer has been
            hit. Calculations are based on the objects texture size.
            </summary>
            <param name="gameObject"></param>
            <returns>Rectangle of area where object can be hit.</returns>
        </member>
        <member name="P:BirdWarsTest.HealthComponents.HealthComponent.Health">
            <value>The object health.</value>
        </member>
        <member name="P:BirdWarsTest.HealthComponents.HealthComponent.TookDamage">
            <value>Bool indicating if object took damage.</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.ButtonChangeConfigurationInputComponent">
            <summary>
            Input component starts the process to change the applications
            current confuiguration when clicked on.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ButtonChangeConfigurationInputComponent.#ctor(BirdWarsTest.States.StateHandler,BirdWarsTest.GameObjects.GameObject,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Sets the selector Object.
            </summary>
            <param name="handlerIn"></param>
            <param name="selectorInputIn"></param>
            <param name="stringManagerIn"></param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ButtonChangeConfigurationInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Activates the change process when clicked on.
            </summary>
            <param name="gameObject">The gameObject</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ButtonChangeConfigurationInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the current input on every frame.
            </summary>
            <param name="gameObject">the GameObject</param>
            <param name="gameTime">Game time</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ButtonChangeConfigurationInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handles the current input on every frame.
            </summary>
            <param name="gameObject">the GameObject</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.ButtonChangeStateInputComponent">
            <summary>
            Changes the current state to the state specified on
            creation.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ButtonChangeStateInputComponent.#ctor(BirdWarsTest.States.StateHandler,BirdWarsTest.States.StateTypes)">
            <summary>
            Sets the statehandler reference and the target state
            of the state change.
            </summary>
            <param name="handlerIn">Game statehandler</param>
            <param name="state">specified state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ButtonChangeStateInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the necessary information to determine if the 
            user has clicked on the button.
            </summary>
            <param name="gameObject">The gameObject</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ButtonChangeStateInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the current input on every frame.
            </summary>
            <param name="gameObject">the GameObject</param>
            <param name="gameTime">Game time</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ButtonChangeStateInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handles the current input on every frame.
            </summary>
            <param name="gameObject">the GameObject</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.ConnectToServerInputComponent">
            <summary>
            Starts the process connect to a remote server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ConnectToServerInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Sets the statehandler and creates empty server arguments.
            </summary>
            <param name="handlerIn"></param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ConnectToServerInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the current input on every frame.
            </summary>
            <param name="gameObject">the GameObject</param>
            <param name="gameTime">Game time</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ConnectToServerInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the current input on every frame.
            </summary>
            <param name="gameObject">the GameObject</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ConnectToServerInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handles the necessary information to determine if the 
            user has clicked on the button.
            </summary>
            <param name="gameObject">The gameObject</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.CreateLobbyInputComponent">
            <summary>
            Input component used to alert network manager who is the host
            to create a game round.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.CreateLobbyInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.CreateLobbyInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.CreateLobbyInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Calls the network manager Create round method.
            </summary>
            <param name="gameObject">Game Object</param>
            <param name="state">current keyboard state.</param>
            <param name="gameState">current game state.</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.EventArguments.ChatMessageArgs">
            <summary>
            Simple arguments used to send messages
            </summary>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.ChatMessageArgs.Message">
            <value>String message.</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.EventArguments.CodeEventArgs">
            <summary>
            Simple arguments used to send messages
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.CodeEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.CodeEventArgs.ResetArgs">
            <summary>
            Resets arguments to empty string values.
            </summary>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.CodeEventArgs.Email">
            <value>String email.</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.EventArguments.LoginEventArgs">
            <summary>
            Simple arguments used to send messages
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.LoginEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.LoginEventArgs.ResetArgs">
            <summary>
            Resets arguments to empty string values.
            </summary>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.LoginEventArgs.Email">
            <value>String email.</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.LoginEventArgs.Password">
            <value>String email.</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.EventArguments.PasswordChangeEventArgs">
            <summary>
            Simple arguments used to send messages
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.PasswordChangeEventArgs.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.PasswordChangeEventArgs.ResetArgs">
            <summary>
            Resets arguments to empty string values.
            </summary>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.PasswordChangeEventArgs.Code">
            <value>Message code.</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.PasswordChangeEventArgs.Email">
            <value>String email</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.PasswordChangeEventArgs.Password">
            <value>String password</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs">
            <summary>
            Simple arguments used to send messages
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs.ClearRegisterArgs">
            <summary>
            Resets arguments to empty string values.
            </summary>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs.Name">
            <value>String email.</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs.LastNames">
            <value>String lastNames.</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs.Username">
            <value>String username.</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs.Email">
            <value>String email.</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs.Password">
            <value>String password.</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs.ConfirmPassword">
            <value>String confirm password.</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.EventArguments.ServerChangeArgs">
            <summary>
            Simple arguments used to send messages
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.ServerChangeArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.EventArguments.ServerChangeArgs.ResetArgs">
            <summary>
            Resets arguments to empty string values.
            </summary>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.ServerChangeArgs.Address">
            <value>String Address.</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.EventArguments.ServerChangeArgs.Port">
            <value>String port.</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.ExternalPlayerInputComponent">
            <summary>
            Input component that handles remote player input using
            the player's known velocities.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ExternalPlayerInputComponent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ExternalPlayerInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ExternalPlayerInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ExternalPlayerInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handles remote player input based on current gameobject state, 
            keyboard state and game state.
            </summary>
            <param name="gameObject">Current game object</param>
            <param name="state">Current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ExternalPlayerInputComponent.GetVelocity">
            <summary>
            Returns the current velocity
            </summary>
            <returns>Returns the current velocity</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ExternalPlayerInputComponent.GetLastActiveVelocity">
            <summary>
            Returns tha last active velocity used to
            determine direction.
            </summary>
            <returns>Return the last active velocity.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ExternalPlayerInputComponent.SetVelocity(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets the LastActive velocity to the last velocity state
            and the new velocity for the object.
            </summary>
            <param name="newVelocity">New gameObject velocity.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ExternalPlayerInputComponent.GetLastUpdateTime">
            <summary>
            Returns the last Update time.
            </summary>
            <returns>Returns the last update time.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ExternalPlayerInputComponent.SetLastUpdateTime(System.Double)">
            <summary>
            Sets the last update time.
            </summary>
            <param name="newTime">Sets the last update time.</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.FindGameInputComponent">
            <summary>
            Alerts the network manager to send a Join Round Request
            message to the server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.FindGameInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.FindGameInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.FindGameInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Calls the network manager's join roind message.
            </summary>
            <param name="gameObject">Current game object</param>
            <param name="state">Current keyboard state</param>
            <param name="gameState">Current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.GrenadeInputComponent">
            <summary>
            Input component that handles grenade behavior like movement,
            speed, and update.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.GrenadeInputComponent.#ctor(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates an instance of the input component with the
            specified direction and speed.
            </summary>
            <param name="directionIn">Direction grenade was thrown.</param>
            <param name="playerSpeedIn">The speed at which it was thrown.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.GrenadeInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.GrenadeInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.GrenadeInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handles the input recieved based on the current game object state,
            current keyboard state and current game state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.GrenadeInputComponent.GetVelocity">
            <summary>
            Returns the calculated object velocity.
            </summary>
            <returns>Return the calculated object velocity.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.GrenadeInputComponent.GetObjectSpeed">
            <summary>
            Return the object speed.
            </summary>
            <returns>Return the object speed.</returns>
        </member>
        <member name="P:BirdWarsTest.InputComponents.GrenadeInputComponent.Direction">
            <value>The direction the grenade was thrown.</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.GrenadeInputComponent.GrenadeSpeed">
            <value>The grenade speed</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.InputComponent">
            <summary>
            The base abstract input component class.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handes the input recieved based on the current game object state,
            current keyboard state and current game state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.GetText">
            <summary>
            Method used to return certain text if needed.
            </summary>
            <returns>Text</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.GetTextWithoutVisualCharacter">
            <summary>
            Used Text area input components to remove visual characters
            from text.
            </summary>
            <returns>A clean usable text string.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.GetVelocity">
            <summary>
            Returns the velocity
            </summary>
            <returns>Velocity</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.GetObjectSpeed">
            <summary>
            REturns object speed
            </summary>
            <returns>oBject speed.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.SetVelocity(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets the object velocity.
            </summary>
            <param name="newVelocity">The new specified velocity.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.GetLastActiveVelocity">
            <summary>
            Returns the last active velovity.
            </summary>
            <returns>The last active velocity.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.GetLastUpdateTime">
            <summary>
            Returns the last update time.
            </summary>
            <returns>REturns the last update time.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.SetLastUpdateTime(System.Double)">
            <summary>
            Sets the last update time
            </summary>
            <param name="newTime">The new update time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.ClearText">
            <summary>
            Clears the necessary text.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.GetRemainingMinutes">
            <summary>
            Returns the remaining round time minutes.
            </summary>
            <returns>Remaining minutes.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.InputComponent.GetRemainingSeconds">
            <summary>
            Return the remaining round time seconds.
            </summary>
            <returns>Remaining round time seconds.</returns>
        </member>
        <member name="T:BirdWarsTest.InputComponents.LanguageSelectorInputComponent">
            <summary>
            Input component used to change the current selected
            language in the options state.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LanguageSelectorInputComponent.#ctor(BirdWarsTest.GameObjects.GameObject,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Default constructor. Sets a reference to the game string
            manager, a reference to the language object the user
            can see and basic values.
            </summary>
            <param name="languageObjectIn"></param>
            <param name="stringManagerIn"></param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LanguageSelectorInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LanguageSelectorInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Sets the last mouse state and gets current mouse state. Handles
            click to language object arrows.
            </summary>
            <param name="gameObject">THe current gameObject.</param>
            <param name="state">The current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LanguageSelectorInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handes the input recieved based on the current game object state,
            current keyboard state and current game state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="P:BirdWarsTest.InputComponents.LanguageSelectorInputComponent.ChangedLanguage">
            <value>Bool indicating if language selection was changed</value>
        </member>
        <member name="P:BirdWarsTest.InputComponents.LanguageSelectorInputComponent.CurrentLanguageValue">
            <value>The currently selected language.</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.LeaveGameInputComponent">
            <summary>
            Input component that sends a message to the server
            saying the client will leave the game round, then changes
            state to the target state.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LeaveGameInputComponent.#ctor(BirdWarsTest.States.StateHandler,BirdWarsTest.States.StateTypes)">
            <summary>
            Default constructor, sets the target state and game statehandler
            reference. Adds method to event handler.
            </summary>
            <param name="handlerIn">Game statehandler</param>
            <param name="state">The target state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LeaveGameInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LeaveGameInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LeaveGameInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handes the input recieved based on the current game object state,
            current keyboard state and current game state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.LocalPlayerInputComponent">
            <summary>
            Input component that handles local player movement and
            actions.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Default constructor. sets default last update time, direction
            and player speed.
            </summary>
            <param name="handlerIn">Game statehandler</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handes the input recieved based on the current game object state,
            current keyboard state and current game state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.GetVelocity">
            <summary>
            Returns the current player velocity.
            </summary>
            <returns>Returns the current player velocity.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.GetObjectSpeed">
            <summary>
            Returns the player speed.
            </summary>
            <returns>Returns the player speed.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.GetLastActiveVelocity">
            <summary>
            Returns the last active velocity.
            </summary>
            <returns>Returns the last active velocity.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.SetVelocity(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets the current player velocity.
            </summary>
            <param name="newVelocity">The new velocity</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.GetLastUpdateTime">
            <summary>
            Returns the last time the player object was updated
            by a game message.
            </summary>
            <returns>Returns the last time the player object was updated by a game message.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LocalPlayerInputComponent.SetLastUpdateTime(System.Double)">
            <summary>
            Sets the last update time.
            </summary>
            <param name="newTime">The new update time.</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.LoginButtonInputComponent">
            <summary>
            Input component used to login to a user account.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LoginButtonInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Sets the statehandler reference, creates the default login
            event arguments and string validator.
            </summary>
            <param name="handlerIn">Game statehandler</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LoginButtonInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LoginButtonInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LoginButtonInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Checks if the user clicked on the object's button texture and if so
            gets the login arguments from their respective objects and calls the network
            manager Login method.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.LogoutInputComponent">
            <summary>
            Input component used to terminate a user session
            on the application.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LogoutInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Sets the statehandler reference.
            </summary>
            <param name="handlerIn">Game statehandler</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LogoutInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LogoutInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.LogoutInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Calls the network manager's logout method and changes satte to 
            the login state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.RegisterButtonInputComponent">
            <summary>
            Input component used to send user information to the server
            so that a new user and account can be created.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RegisterButtonInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Sets the statehandler reference and creates default register
            event arguments.
            </summary>
            <param name="handlerIn"></param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RegisterButtonInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RegisterButtonInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RegisterButtonInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Checks if the user clicked on the gameObjects texture and if so
            calls the network manager's RegisterUser method.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="E:BirdWarsTest.InputComponents.RegisterButtonInputComponent.Click">
            <value>Input component event handler</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.ResetPasswordInputComponent">
            <summary>
            Input component used to send a reset password requiest to
            the server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ResetPasswordInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Sets the statehandler reference and creates default password
            event arguments.
            </summary>
            <param name="handlerIn">Game statehandler</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ResetPasswordInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ResetPasswordInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.ResetPasswordInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Checks if user clicked on button texture and if so, gets the password event
            arguments from their respective gameObjects and sends an update password request 
            to server.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.RoundTimeInputComponent">
            <summary>
            Handles and updates the round timer.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RoundTimeInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Sets round time to 300 seconds and the statehandler 
            reference.
            </summary>
            <param name="handlerIn">Game statehandler</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RoundTimeInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Substracts elapsed game time from remaining game time and
            sends a message to all clients to syncronize their time if
            this input component belongs to server.
            </summary>
            <param name="gameObject">Current gameObject</param>
            <param name="gameTime">Game time</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RoundTimeInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RoundTimeInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handles the input recieved based on the current game object state,
            current keyboard state and current game state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RoundTimeInputComponent.GetRemainingMinutes">
            <summary>
            Returns the remaining game time in minutes.
            </summary>
            <returns>Returns the remaining game time in minutes.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RoundTimeInputComponent.GetRemainingSeconds">
            <summary>
            Returns the remaining seconds in a game round minute.
            </summary>
            <returns>Returns the remaining seconds in a game round minute.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RoundTimeInputComponent.SetRemainingRoundTime(System.Single)">
            <summary>
            Sets the remaining round time to the specified time.
            </summary>
            <param name="remainingTime">Specified round time</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.RoundTimeInputComponent.IsRoundTimeOver">
            <summary>
            Checks if the the round time is depleated.
            </summary>
            <returns>bool indicating if game round is over.</returns>
        </member>
        <member name="P:BirdWarsTest.InputComponents.RoundTimeInputComponent.RemainingRoundTime">
            <value>The remaining round time</value>
        </member>
        <member name="T:BirdWarsTest.InputComponents.SelectorChangeStateInputComponent">
            <summary>
            Input component used to change the current state.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SelectorChangeStateInputComponent.#ctor(BirdWarsTest.States.StateHandler,BirdWarsTest.States.StateTypes)">
            <summary>
            Sets the statehandler reference and target state.
            </summary>
            <param name="handlerIn"></param>
            <param name="changeStateIn"></param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SelectorChangeStateInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SelectorChangeStateInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SelectorChangeStateInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Changes the current game state to the target state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.SelectorInputComponent">
            <summary>
            Input component used to change the MainMenu menu options
            state.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SelectorInputComponent.#ctor(System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Default constructor, creates the possible menu options
            from a list of possible selections.
            </summary>
            <param name="selectionsIn"></param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SelectorInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SelectorInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SelectorInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Checks user input for keyboard keys and changed the selector state
            based on that input.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.SendChatMessageInputComponent">
            <summary>
            Input component that sends a chat message to the server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SendChatMessageInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Creates default chat event arguments and data.
            </summary>
            <param name="handlerIn"></param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SendChatMessageInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SendChatMessageInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SendChatMessageInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Updates the message timer if a message has been sent and checks whether
            the user clicked on the objects button texture or pressed enter. If so, it gets the message
            information from it's respective game object and sends it to the server.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.SolicitPasswordResetInputComponent">
            <summary>
            Input component that sends a message to the server so that
            a code is sent via email to the user for a password change.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SolicitPasswordResetInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Sets the staehandler reference and creates default code event 
            arguments.
            </summary>
            <param name="handlerIn">Game statehandler</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SolicitPasswordResetInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SolicitPasswordResetInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles the input recieved based on the current game object state
            and keyboard state.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.SolicitPasswordResetInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Checks if user clicked on object's button texture and if so, sends
            a solicit password change emssage to server.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.StartRoundInputComponent">
            <summary>
            Input coponent used by server to start a game round.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.StartRoundInputComponent.#ctor(BirdWarsTest.States.StateHandler)">
            <summary>
            Default constructor
            </summary>
            <param name="handlerIn"></param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.StartRoundInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.StartRoundInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Checks if the user clicked on the object's button texture and if so,
            calls the network manager StartRound method.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.StartRoundInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handles the input recieved based on the current game object state,
            current keyboard state and current game state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="T:BirdWarsTest.InputComponents.TextAreaInputComponent">
            <summary>
            Input component that handles the displayed user
            input text.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.TextAreaInputComponent.#ctor(Microsoft.Xna.Framework.GameWindow)">
            <summary>
            Sets the game window reference, and default values.
            </summary>
            <param name="gameWindowIn"></param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.TextAreaInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles the input recieved based on the current game object state
            and game time.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="gameTime">Current game time.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.TextAreaInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Checks if the user clicked on the objects text area texture and if so,
            sets focus on text area and allows user to type. If user clicks outside of
            the text area texture bounds and focus is on, it sets focus off.
            </summary>
            <param name="gameObject">Current game object.</param>
            <param name="state">Current keyboard state.</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.TextAreaInputComponent.HandleInput(BirdWarsTest.GameObjects.GameObject,Microsoft.Xna.Framework.Input.KeyboardState,BirdWarsTest.States.GameState)">
            <summary>
            Handles the input recieved based on the current game object state,
            current keyboard state and current game state.
            </summary>
            <param name="gameObject">The Game object</param>
            <param name="state">current keyboard state</param>
            <param name="gameState">current game state</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.TextAreaInputComponent.AddCharacter(System.Char)">
            <summary>
            Adds character to the user input string.
            </summary>
            <param name="newChar">The character to be added</param>
        </member>
        <member name="M:BirdWarsTest.InputComponents.TextAreaInputComponent.RemoveCharacter">
            <summary>
            Removes a character from the text string.
            </summary>
        </member>
        <member name="M:BirdWarsTest.InputComponents.TextAreaInputComponent.GetText">
            <summary>
            Returns the user input text with visual characters.
            </summary>
            <returns>Returns the user input text with visual characters.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.TextAreaInputComponent.GetTextWithoutVisualCharacter">
            <summary>
            Returns the user input text without the visual characters.
            </summary>
            <returns>Returns the user input text without the visual characters.</returns>
        </member>
        <member name="M:BirdWarsTest.InputComponents.TextAreaInputComponent.ClearText">
            <summary>
            Clears the user input text.
            </summary>
        </member>
        <member name="P:BirdWarsTest.InputComponents.TextAreaInputComponent.Text">
            <value>The user input text.</value>
        </member>
        <member name="T:BirdWarsTest.Network.ClientNetworkManager">
            <summary>
            The client network manager handles all messages and matters 
            relating to the server and it's connection.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.#ctor">
            <summary>
            Creates an instance of the client manager which tries
            to connect to the server at a local location.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.Login(System.String,System.String)">
            <summary>
            Sends a LoginRequestMessage to the server.
            </summary>
            <param name="email">User email</param>
            <param name="password">User password</param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.Logout">
            <summary>
            Closes the current user session.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.ConnectToSpecificServer(BirdWarsTest.States.StateHandler,System.String,System.String)">
            <summary>
            The client tries to connect to the server at the specified
            ip address and port.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="address">Ip addres</param>
            <param name="port">Port</param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.GetLoginSession">
            <summary>
            Return the current user session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.Connect">
            <summary>
            Configures the netclient and attempts to connect to the server
            on a local address.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.CreateMessage">
            <summary>
            Creates and returns a Netoutgoing message.
            </summary>
            <returns>Creates and returns a Netoutgoing message.</returns>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.Disconnect">
            <summary>
            Client disconnects from the server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.Dispose">
            <summary>
            Method included in framework
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.ReadMessage">
            <summary>
            Reads an incoming message sent by the server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.Recycle(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Recycles the incoming messages that are consumed.
            </summary>
            <param name="im"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendMessage(BirdWarsTest.Network.Messages.IGameMessage)">
            <summary>
            Sends a message to the server.
            </summary>
            <param name="gameMessage"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.GetConnectionState">
            <summary>
            Return the network manager connection status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.IsHost">
            <summary>
            Checks if this instance on network manager is the server
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.ProcessMessages(BirdWarsTest.States.StateHandler)">
            <summary>
            Method processes the incoming messages sent by the server.
            </summary>
            <param name="handler">Game statehandler.</param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.RegisterUser(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a RegisterUserMessage to server to create a new user
            in the database.
            </summary>
            <param name="nameIn">User name</param>
            <param name="lastNameIn">User last names</param>
            <param name="usernameIn"> User username</param>
            <param name="emailIn">User email</param>
            <param name="passwordIn">User password</param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.CreateRound">
            <summary>
            Method unused by client.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.StartRound">
            <summary>
            Method unused by client.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.JoinRound">
            <summary>
            Sends a JoinRoundRequestMessage to server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.LeaveRound">
            <summary>
            Sends a LeaveRoundMessage to the server
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendChatMessage(System.String)">
            <summary>
            Sends a chat message to the server
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendPasswordChangeMessage(System.String)">
            <summary>
            Sends a SolicitPasswordResetMessage to the server.
            </summary>
            <param name="emailIn"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendPlayerStateChangeMessage(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Sends a PlayerStateChangedMessage to the server
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendSpawnBoxMessage(System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Method unused by client
            </summary>
            <param name="boxes"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendSpawnConsumablesMessage(System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Method unused by client
            </summary>
            <param name="consumables"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendBoxDamageMessage(System.Int32,System.Int32)">
            <summary>
            Sends a BoxDamageMessage to server.
            </summary>
            <param name="boxIndex">Target box index</param>
            <param name="damage">Damage sustained</param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendPlayerAttackMessage(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Sends a PlayerAttackMessage to server
            </summary>
            <param name="localPlayerIndex">local player index</param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendPickedUpItemMessage(System.Int32)">
            <summary>
            Sends a PickedUpIte message to server
            </summary>
            <param name="itemIndex">Item index</param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendSpawnGrenadeMessage(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Sends s SpawnGrenadeMessage to server
            </summary>
            <param name="grenade"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendUpdateRemainingTimeMessage(System.Single)">
            <summary>
            Method unused by client
            </summary>
            <param name="remainingTime"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendRoundFinishedMessage(System.Int32)">
            <summary>
            Method unused by client
            </summary>
            <param name="remainingRoundTime"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.SendPlayerDiedMessage(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Sends a PlayerIsDeadMessage to server.
            </summary>
            <param name="playerId"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ClientNetworkManager.UpdatePassword(System.String,System.String,System.String)">
            <summary>
            Sends a PasswordReset message to server.
            </summary>
            <param name="code">Generated code</param>
            <param name="email">user email</param>
            <param name="password">new password</param>
        </member>
        <member name="P:BirdWarsTest.Network.ClientNetworkManager.UserSession">
            <value>The current user session.</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.EmailManager">
            <summary>
            Handles the creation and sending of email messages.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.EmailManager.#ctor">
            <summary>
            Creates an instance of the email maanger with the default
            values.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.EmailManager.SendEmailMessage(System.String,System.String,System.String,System.String)">
            <summary>
            Sends an email message to the specified email with the input 
            subject, body and recipient name.
            </summary>
            <param name="recipientName">Recipient</param>
            <param name="recipientEmail">Recipient email</param>
            <param name="subject">Email subject</param>
            <param name="body">Email message body</param>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.BanPlayerMessage">
            <summary>
            Message sent to server to ban player or add a ban vote to player list.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.BanPlayerMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.BanPlayerMessage.#ctor(System.String)">
            <summary>
            Creates the game message from a username input
            </summary>
            <param name="usernameIn">Ban player username</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.BanPlayerMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.BanPlayerMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.BanPlayerMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.BanPlayerMessage.Username">
            <value>The username of the player to be banned</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.BoxDamageMessage">
            <summary>
            Message used to send the amount of damage an item box
            has sustained.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.BoxDamageMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.BoxDamageMessage.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates the message from a box index and the damage it
            sustained.
            </summary>
            <param name="boxIndexIn">target box index</param>
            <param name="damageIn">Damage sustained</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.BoxDamageMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.BoxDamageMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.BoxDamageMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.BoxDamageMessage.BoxIndex">
            <value>The target box index</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.BoxDamageMessage.Damage">
            <value>The damage sustained</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.ChatMessage">
            <summary>
            Message used to distribute user chat messages 
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.ChatMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.ChatMessage.#ctor(System.String,System.String)">
            <summary>
            Creates the game message from a username input
            </summary>
            <param name="senderUsernameIn">Sender username input</param>
            <param name="messageIn">Message body input</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.ChatMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.ChatMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.ChatMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.ChatMessage.SenderUsername">
            <value>The username of the player who sent the message</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.ChatMessage.Message">
            <value>The message body</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.ExitWaitingRoomMessage">
            <summary>
            Message used by server to remove a client from a game round.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.ExitWaitingRoomMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.ExitWaitingRoomMessage.#ctor">
            <summary>
            Creates the default game message
            </summary>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.ExitWaitingRoomMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.ExitWaitingRoomMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.ExitWaitingRoomMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.GameMessageTypes">
            <summary>
            Used to keep track of all game message types.
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.ChatMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.JoinRoundRequestMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.JoinRoundRequestResultMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.LoginRequestMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.LoginResultMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.LeaveRoundMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.RegisterUserMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.RoundCreatedMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.RoundStateChangedMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.PasswordResetMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.PasswordResetResultMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.SolicitPasswordResetMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.SolicitPasswordResultMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.StartRoundMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.PlayerStateChangeMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.SpawnBoxMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.BoxDamageMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.PlayerAttackMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.SpawnConsumablesMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.PickedUpItemMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.SpawnGrenadeMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.UpdateRoundTimeMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.UpdateUserStatisticsMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.RoundFinishedMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.RegistrationResultMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.PlayerIsDeadMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.ExitWaitingRoomMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.TestConnectionMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Network.Messages.GameMessageTypes.BanPlayerMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.IGameMessage">
            <summary>
            The Game message interface
            </summary>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.IGameMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.IGameMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.IGameMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.JoinRoundRequestMessage">
            <summary>
            Message sent by client to server asking to join a game
            round.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.JoinRoundRequestMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.JoinRoundRequestMessage.#ctor(System.String)">
            <summary>
            Creates the game message from a username input
            </summary>
            <param name="usernameIn">Player username</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.JoinRoundRequestMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.JoinRoundRequestMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.JoinRoundRequestMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.JoinRoundRequestResultMessage">
            <summary>
            Message to the client by the server telling it if it's
            join round request was accepted or denied.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.JoinRoundRequestResultMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.JoinRoundRequestResultMessage.#ctor(System.Boolean,System.String[])">
            <summary>
            Creates a game message from a string of player usernames already
            in the game round.
            </summary>
            <param name="approvedIn">Approved or denied bool</param>
            <param name="usernames">The list of player usernames</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.JoinRoundRequestResultMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.JoinRoundRequestResultMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.JoinRoundRequestResultMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.LeaveRoundMessage">
            <summary>
            Message sent to server by client telling it that the client
            is leaving the gaeround.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LeaveRoundMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LeaveRoundMessage.#ctor(System.String)">
            <summary>
            Creates the game message from a username input
            </summary>
            <param name="username_In">Player leaving the round</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.LeaveRoundMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LeaveRoundMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LeaveRoundMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.LoginRequestMessage">
            <summary>
            Message sent to the server by the client asking it to 
            validate user credentials and allow login.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LoginRequestMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LoginRequestMessage.#ctor(System.String,System.String)">
            <summary>
            Creates a game message from the login credentials provided
            by user.
            </summary>
            <param name="emailIn">User email</param>
            <param name="passwordIn">User password</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.LoginRequestMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LoginRequestMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LoginRequestMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.LoginRequestMessage.Email">
            <value>The user email</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.LoginRequestMessage.Password">
            <value>The user password</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.LoginResultMessage">
            <summary>
            Message sent to the client by the server telling it if
            login was approved or denied.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LoginResultMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LoginResultMessage.#ctor(System.Boolean,System.String,BirdWarsTest.Database.User,BirdWarsTest.Database.Account)">
            <summary>
            Creates the message from the login result bool, the reason of 
            failed login, the user and account of the approved login credentials.
            </summary>
            <param name="result">Approved or denied bool</param>
            <param name="reasonIn">The reason why request was denied</param>
            <param name="userIn">User</param>
            <param name="userAccountIn">Account</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.LoginResultMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LoginResultMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.LoginResultMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.LoginResultMessage.LoginRequestResult">
            <value>The result of the login request</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.LoginResultMessage.Reason">
            <value>The reason for denial (if denied)</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.LoginResultMessage.User">
            <value>The user of the login credentials</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.LoginResultMessage.Account">
            <value>The account of the login credentials</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.PasswordResetMessage">
            <summary>
            Message sent from the client to the server which holds
            the necessary information for a password reset.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PasswordResetMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PasswordResetMessage.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates the message form the user input.
            </summary>
            <param name="codeIn">Recieved code</param>
            <param name="emailIn">User email</param>
            <param name="passwordIn">New user password</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PasswordResetMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PasswordResetMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PasswordResetMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PasswordResetMessage.Code">
            <value>The user's recieved code</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PasswordResetMessage.Email">
            <value>The user email</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PasswordResetMessage.Password">
            <value>The new password</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.PasswordResetResultMessage">
            <summary>
            Message sent from the server to the client indicating wwhether
            the password reset was successful or not.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PasswordResetResultMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PasswordResetResultMessage.#ctor(System.String)">
            <summary>
            Creates a message from the input string
            </summary>
            <param name="resultIn">Result</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PasswordResetResultMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PasswordResetResultMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PasswordResetResultMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PasswordResetResultMessage.Result">
            <value>The result string of the operation</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.PickedUpItemMessage">
            <summary>
            Message used to alert all clients and server which items have
            been picked up.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PickedUpItemMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PickedUpItemMessage.#ctor(System.Int32)">
            <summary>
            Creates the message from the target item index.
            </summary>
            <param name="itemIndexIn">Target item index</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PickedUpItemMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PickedUpItemMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PickedUpItemMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PickedUpItemMessage.ItemIndex">
            <value>Target Item index</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.PlayerAttackMessage">
            <summary>
            Used to alert all clients and server about which player
            has attacked.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerAttackMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerAttackMessage.#ctor(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Creates the game message from the target player index
            </summary>
            <param name="playerIndexIn">Player index</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PlayerAttackMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerAttackMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerAttackMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PlayerAttackMessage.PlayerIndex">
            <value>Target player index</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.PlayerIsDeadMessage">
            <summary>
            Used to alert all clients and server which player has died.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerIsDeadMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerIsDeadMessage.#ctor(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Creates a message from the target player Id
            </summary>
            <param name="playerId">Target player Id</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PlayerIsDeadMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerIsDeadMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerIsDeadMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PlayerIsDeadMessage.PlayerId">
            <value>Target player Id</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.PlayerStateChangeMessage">
            <summary>
            Used to update player state on all clients and server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerStateChangeMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerStateChangeMessage.#ctor(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Creates a message from a player gameobject
            </summary>
            <param name="player">The player object</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PlayerStateChangeMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerStateChangeMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.PlayerStateChangeMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PlayerStateChangeMessage.Id">
            <value>Target player Id</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PlayerStateChangeMessage.Position">
            <value>The player position</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PlayerStateChangeMessage.Velocity">
            <value>The player velocity</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.PlayerStateChangeMessage.MessageTime">
            <value>The time message was created</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.RegisterUserMessage">
            <summary>
            Message sent to server by client that holds all the necessary
            information to create a new user account.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RegisterUserMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RegisterUserMessage.#ctor(BirdWarsTest.Database.User)">
            <summary>
            Creates the game message from a user
            </summary>
            <param name="newUser">The user to be created</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.RegisterUserMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RegisterUserMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RegisterUserMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.RegisterUserMessage.User">
            <value>The user to be created</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.RegistrationResultMessage">
            <summary>
            Message sent to the client by the server to inform it of
            the registration result.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RegistrationResultMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RegistrationResultMessage.#ctor(System.String)">
            <summary>
            Creates the game message from a message string.
            </summary>
            <param name="messageIn">Result message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.RegistrationResultMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RegistrationResultMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RegistrationResultMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.RegistrationResultMessage.Message">
            <value>The message value</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.RoundCreatedMessage">
            <summary>
            Message sent to server to indicating it that the game round 
            has been created.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundCreatedMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundCreatedMessage.#ctor(System.Boolean,System.String[])">
            <summary>
            Creates a message with input bool and list of
            usernames in player round.
            </summary>
            <param name="roundCreatedIn"></param>
            <param name="usernames"></param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.RoundCreatedMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundCreatedMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundCreatedMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.RoundCreatedMessage.RoundCreated">
            <value>Boo indicating that the round has been created</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.RoundFinishedMessage">
            <summary>
            Message sent to all clients by server to indicate that 
            the game round has finished.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundFinishedMessage.#ctor(System.Int32)">
            <summary>
            Creates the game message from teh remaining round time.
            </summary>
            <param name="remainingRoundTimeIn"></param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundFinishedMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.RoundFinishedMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundFinishedMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundFinishedMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.RoundFinishedMessage.RemainingRoundTime">
            <value>The remaining round time as an integer</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.RoundStateChangedMessage">
            <summary>
            Message sent to all clients by server to update the current state
            of the game round.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundStateChangedMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundStateChangedMessage.#ctor(System.String[])">
            <summary>
            Creates a message from the list of players in the game round.
            </summary>
            <param name="usernames">List of players</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.RoundStateChangedMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundStateChangedMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.RoundStateChangedMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.SolicitPasswordResetMessage">
            <summary>
            Message sent to server by client soliciting a password reset
            email
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SolicitPasswordResetMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SolicitPasswordResetMessage.#ctor(System.String)">
            <summary>
            Creates a message from the user email soliciting the password
            change.
            </summary>
            <param name="emailIn">The user email</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SolicitPasswordResetMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SolicitPasswordResetMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SolicitPasswordResetMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SolicitPasswordResetMessage.Email">
            <value>The user email</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.SolicitPasswordResultMessage">
            <summary>
            Message sent to the client by the server to indicate if
            solicit password method was successful.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SolicitPasswordResultMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SolicitPasswordResultMessage.#ctor(System.String)">
            <summary>
            Creates a message from a result string
            </summary>
            <param name="result">The result string</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SolicitPasswordResultMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SolicitPasswordResultMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SolicitPasswordResultMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SolicitPasswordResultMessage.Message">
            <value>The message result</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.SpawnBoxMessage">
            <summary>
            Message sent to all clients by erver indicating them to spawn
            item boxes at the locations specified.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnBoxMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnBoxMessage.#ctor(System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Creates a message from a list of existing item boxes.
            </summary>
            <param name="boxes">The list of item boxes.</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnBoxMessage.#ctor(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Creates a message from a single item box instance
            </summary>
            <param name="box">The target box</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SpawnBoxMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnBoxMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnBoxMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.SpawnConsumablesMessage">
            <summary>
            Message sent to all clients by server indicating them to spawn
            consumable items at the specified locations.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnConsumablesMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnConsumablesMessage.#ctor(System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Creates a message from the input consumable item list.
            </summary>
            <param name="consumablesIn">COnsumale item list</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SpawnConsumablesMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnConsumablesMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnConsumablesMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SpawnConsumablesMessage.Identifiers">
            <value>The list consumable item types</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SpawnConsumablesMessage.ObjectPositions">
            <value>The list of item positions</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.SpawnGrenadeMessage">
            <summary>
            Message sent all clients indicating them to spawn a grenade at the
            specified position with the specified direction and speed.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnGrenadeMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnGrenadeMessage.#ctor(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Creates a message from the grenade object.
            </summary>
            <param name="gameObject"></param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SpawnGrenadeMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnGrenadeMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.SpawnGrenadeMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SpawnGrenadeMessage.Position">
            <value>The grenade position</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SpawnGrenadeMessage.Direction">
            <value>The grenade object direction</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.SpawnGrenadeMessage.GrenadeSpeed">
            <value>The grenade object speed</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.StartRoundMessage">
            <summary>
            Message sent to all clients and server to indicate that the game round has started.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.StartRoundMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.StartRoundMessage.#ctor(System.String[])">
            <summary>
            Creates a message from the list of player usernames in the 
            game rounds. Server sends this message to itself.
            </summary>
            <param name="usernames">Player usernames in game round</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.StartRoundMessage.#ctor(System.String[],System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Creates a message from the list of players in the game round and
            their positions on the game world.
            </summary>
            <param name="usernames">Player usernames</param>
            <param name="players">Player objects</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.StartRoundMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.StartRoundMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.StartRoundMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.TestConnectionMessage">
            <summary>
            Message sent by client to test the connection to the server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.TestConnectionMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.TestConnectionMessage.#ctor(System.String)">
            <summary>
            Creates a message from the test results.
            </summary>
            <param name="resultIn"></param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.TestConnectionMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.TestConnectionMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.TestConnectionMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.TestConnectionMessage.Result">
            <value>The result of the connection test.</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.UpdateRoundTimeMessage">
            <summary>
            Message sent to all clients to syncronize game round time
            with server's round time.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.UpdateRoundTimeMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.UpdateRoundTimeMessage.#ctor(System.Single)">
            <summary>
            Creates a message from the remaining round time and current
            nettime.
            </summary>
            <param name="remainingRoundTime">Round time</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.UpdateRoundTimeMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.UpdateRoundTimeMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.UpdateRoundTimeMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.UpdateRoundTimeMessage.MessageTime">
            <value>The time the message wwas created</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.UpdateRoundTimeMessage.RemainingRoundTime">
            <value>The remaining round time</value>
        </member>
        <member name="T:BirdWarsTest.Network.Messages.UpdateUserStatisticsMessage">
            <summary>
            Message sent to server to update the user account information.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.UpdateUserStatisticsMessage.#ctor(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Creates the game message from an incoming message
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.UpdateUserStatisticsMessage.#ctor(BirdWarsTest.Database.User,BirdWarsTest.Database.Account)">
            <summary>
            Creates a essage from a user and their associated account.
            </summary>
            <param name="userIn">User</param>
            <param name="accountIn">Account</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.UpdateUserStatisticsMessage.MessageType">
            <summary>
            Returns the message type
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.UpdateUserStatisticsMessage.Decode(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Decodes the incoming message data.
            </summary>
            <param name="incomingMessage">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.Messages.UpdateUserStatisticsMessage.Encode(Lidgren.Network.NetOutgoingMessage)">
            <summary>
            Writes the current message data to an outgoing message.
            </summary>
            <param name="outgoingMessage">The target outgoing message</param>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.UpdateUserStatisticsMessage.User">
            <value>The target user</value>
        </member>
        <member name="P:BirdWarsTest.Network.Messages.UpdateUserStatisticsMessage.Account">
            <value>The user's associated account</value>
        </member>
        <member name="T:BirdWarsTest.Network.INetworkManager">
            <summary>
            Interface class implemented by client and server network managers.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.Login(System.String,System.String)">
            <summary>
            Handles the login process
            </summary>
            <param name="email">User email</param>
            <param name="password">User password</param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.Logout">
            <summary>
            Closes the current user session
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.ConnectToSpecificServer(BirdWarsTest.States.StateHandler,System.String,System.String)">
            <summary>
            Attempts to connect to server at specified port and ip address.
            </summary>
            <param name="handler"></param>
            <param name="address"></param>
            <param name="port"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.GetLoginSession">
            <summary>
            Returns current user session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.RegisterUser(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends RegisteruserMessage to self or server.
            </summary>
            <param name="nameIn"></param>
            <param name="lastNameIn"></param>
            <param name="usernameIn"></param>
            <param name="emailIn"></param>
            <param name="passwordIn"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendPasswordChangeMessage(System.String)">
            <summary>
            Sends Password change message to self or server.
            </summary>
            <param name="emailIn"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendChatMessage(System.String)">
            <summary>
            Sends ChatMessage to self or server.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendPlayerStateChangeMessage(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Sends PlayerStateChangeMessage to self or server.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendSpawnBoxMessage(System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Sends SpawnBoxMessage to self or server.
            </summary>
            <param name="boxes"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendSpawnConsumablesMessage(System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Sends SpawnConsumableMessage to self or server.
            </summary>
            <param name="consumables"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendBoxDamageMessage(System.Int32,System.Int32)">
            <summary>
            Sends a BoxDamageMessage to self or clients.
            </summary>
            <param name="boxIndex"></param>
            <param name="damage"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendPlayerAttackMessage(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Sends a PlayerAttackMessage to self or clients.
            </summary>
            <param name="localPlayerIndex"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendPickedUpItemMessage(System.Int32)">
            <summary>
            Sends a PickedUpItemMessage to self or clients.
            </summary>
            <param name="itemIndex"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendSpawnGrenadeMessage(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Sends a SpawnGrenadeMessage to self or clients.
            </summary>
            <param name="grenade"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendUpdateRemainingTimeMessage(System.Single)">
            <summary>
            Sends an UpdateRemainingTimeMessage to self or clients.
            </summary>
            <param name="remainingTime"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendRoundFinishedMessage(System.Int32)">
            <summary>
            Sends a RoundFInishedMessage to self or clients.
            </summary>
            <param name="remainingRoundTime"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.SendPlayerDiedMessage(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Sends a PlayerDiedMessage to self or clients.
            </summary>
            <param name="playerId"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.UpdatePassword(System.String,System.String,System.String)">
            <summary>
            Functionality varies on implementation.
            </summary>
            <param name="code"></param>
            <param name="email"></param>
            <param name="password"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.IsHost">
            <summary>
            Checks if this instance is the host/server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.Connect">
            <summary>
            Connects to the server
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.Disconnect">
            <summary>
            Disconnects to the server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.ReadMessage">
            <summary>
            Reads and returns NetIncomingMessage
            </summary>
            <returns>Reads and returns NetIncomingMessage</returns>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.Recycle(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Recycles a consumed NetIncoming message.
            </summary>
            <param name="im"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.CreateMessage">
            <summary>
            Creates and returns a NetOutgoing message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.ProcessMessages(BirdWarsTest.States.StateHandler)">
            <summary>
            Processes incoming server or client messages.
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.GetConnectionState">
            <summary>
            Returns the Netconnection status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.CreateRound">
            <summary>
            Functionality varies on implementation.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.StartRound">
            <summary>
            Functionality varies on implementation.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.JoinRound">
            <summary>
            Functionality varies on implementation.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.INetworkManager.LeaveRound">
            <summary>
            Functionality varies on implementation.
            </summary>
        </member>
        <member name="T:BirdWarsTest.Network.ServerNetworkManager">
            <summary>
            The server network manager handles distributing messages
            to all clients, their messages, and user login, registration and
            update.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.#ctor">
            <summary>
            Configures the server network manager and instanciates
            all necessary classes.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.Login(System.String,System.String)">
            <summary>
            Sends a loginRequest Message to self for processing.
            </summary>
            <param name="email">User email</param>
            <param name="password">User password</param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.Logout">
            <summary>
            Closes the current user session.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.ConnectToSpecificServer(BirdWarsTest.States.StateHandler,System.String,System.String)">
            <summary>
            Method unused by setver network manager.
            This IS the server.
            </summary>
            <param name="handler"></param>
            <param name="address"></param>
            <param name="port"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.GetLoginSession">
            <summary>
            Returns current user session.
            </summary>
            <returns>Returns current user session.</returns>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.Connect">
            <summary>
            Configures the server network manager and starts it.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.CreateMessage">
            <summary>
            Creates and return a NetOutgoingMessage
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.Disconnect">
            <summary>
            Disconnects the server.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.Dispose">
            <summary>
            Framework method.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.ReadMessage">
            <summary>
            Reads and returns any incoming messages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.Recycle(Lidgren.Network.NetIncomingMessage)">
            <summary>
            Recycles any consumed incoming Messages.
            </summary>
            <param name="im">The incoming message</param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendMessage(BirdWarsTest.Network.Messages.IGameMessage)">
            <summary>
            Sends a message to all client connections.
            </summary>
            <param name="gameMessage"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.GetConnectionState">
            <summary>
            Returns the netconnection status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.IsHost">
            <summary>
            Checks if the current instance is the host/server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.ProcessMessages(BirdWarsTest.States.StateHandler)">
            <summary>
            Processes any incoming client or server messages.
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.RegisterUser(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a RegisterUserMessage to self for processing.
            </summary>
            <param name="nameIn">User name</param>
            <param name="lastNameIn">User last name</param>
            <param name="usernameIn">User username</param>
            <param name="emailIn">User email</param>
            <param name="passwordIn">User password</param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendPasswordChangeMessage(System.String)">
            <summary>
            Sends a PasswordSOlicitMessage to self for processing
            </summary>
            <param name="emailIn">User email.</param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendPlayerStateChangeMessage(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Sends a PlayerStateChangeMessage to al clients with updated player
            state.
            </summary>
            <param name="player">The target player</param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendSpawnBoxMessage(System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Sends a SpawnBoxMessage to all clients.
            </summary>
            <param name="boxes">List of boxes.</param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendSpawnConsumablesMessage(System.Collections.Generic.List{BirdWarsTest.GameObjects.GameObject})">
            <summary>
            Sends a SpawnConsumableMessage to all clients.
            </summary>
            <param name="consumables"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendBoxDamageMessage(System.Int32,System.Int32)">
            <summary>
            Sends a BoxDamage message to all clients.
            </summary>
            <param name="boxIndex"></param>
            <param name="damage"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendPlayerAttackMessage(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Sends a PlayerAttackMessage to all clients.
            </summary>
            <param name="localPlayerIndex"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendPickedUpItemMessage(System.Int32)">
            <summary>
            Sends a pickuedUpItemMessage to all clients.
            </summary>
            <param name="itemIndex"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendSpawnGrenadeMessage(BirdWarsTest.GameObjects.GameObject)">
            <summary>
            Sends a SpawnGrenadeMessage to all clients.
            </summary>
            <param name="grenade"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendUpdateRemainingTimeMessage(System.Single)">
            <summary>
            Sends an UpdateRemainingTimeMessage to all clients
            </summary>
            <param name="remainingTime"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendRoundFinishedMessage(System.Int32)">
            <summary>
            Sends a RoundFinishedMessage to all clients.
            </summary>
            <param name="remainingRoundTime"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendPlayerDiedMessage(BirdWarsTest.GameObjects.Identifiers)">
            <summary>
            Sends a PlayerDiedMessage to all clients.
            </summary>
            <param name="playerId"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.UpdatePassword(System.String,System.String,System.String)">
            <summary>
            Sends a PasswordResetMessage to self for processing.
            </summary>
            <param name="code"></param>
            <param name="email"></param>
            <param name="password"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.CreateRound">
            <summary>
            Creates a game round and sends a RoundCreatedMessage to self for
            processing.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.StartRound">
            <summary>
            Sends a StartRoundMessage to all clients.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.JoinRound">
            <summary>
            Method unused by servernetwork manager.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.SendChatMessage(System.String)">
            <summary>
            Sends a ChatMessage to self for processing.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:BirdWarsTest.Network.ServerNetworkManager.LeaveRound">
            <summary>
            Sends en ExitWaitingRoomMessage to all clients and self for processing.
            </summary>
        </member>
        <member name="P:BirdWarsTest.Network.ServerNetworkManager.ChangeManager">
            <value>Manager that handles password resets</value>
        </member>
        <member name="P:BirdWarsTest.Network.ServerNetworkManager.GameRound">
            <value>The current gameRound.</value>
        </member>
        <member name="P:BirdWarsTest.Network.ServerNetworkManager.UserSession">
            <value>The current usersession.</value>
        </member>
        <member name="T:BirdWarsTest.States.GameState">
            <summary>
            Base abstract GameState class
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.GameState.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager@,System.Int32,System.Int32)">
            <summary>
            Initialized the state, sets the state width and height with
            the specified values.
            </summary>
            <param name="newContent">Game content Manager</param>
            <param name="newGraphics">Graphics Device Manager</param>
            <param name="networkManagerIn">Game network manager</param>
            <param name="stateWidth_in">Specified state width</param>
            <param name="stateHeight_in">Specified state height</param>
        </member>
        <member name="M:BirdWarsTest.States.GameState.Init(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Methos called before transitioning to state.
            Effects vay depending on child state class.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="stringManager">Game string manager</param>
        </member>
        <member name="M:BirdWarsTest.States.GameState.ClearContents">
            <summary>
            Clears all gameobjects in state.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.GameState.Enter(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Sets state width and height. Calls Init method.
            </summary>
            <param name="handler"></param>
            <param name="stringManager"></param>
        </member>
        <member name="M:BirdWarsTest.States.GameState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Updates all necessary gameobjects in gamestate
            </summary>
            <param name="handler">game state handler</param>
            <param name="state">curren keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.States.GameState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates all necessary gameobjects in gamestate
            </summary>
            <param name="handler">game state handler</param>
            <param name="state">curren keyboard state</param>
            <param name="gameTime">game time</param>
        </member>
        <member name="M:BirdWarsTest.States.GameState.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws the state gameObjects to the screen.
            </summary>
            <param name="sprites">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.States.GameState.SetErrorMessage(System.String)">
            <summary>
            Sets an error message to error message object.
            </summary>
            <param name="errorMessage">The value of the message.</param>
        </member>
        <member name="M:BirdWarsTest.States.GameState.SetMessage(System.String)">
            <summary>
            Sets a normal message to the message object.
            </summary>
            <param name="message">The value of the message</param>
        </member>
        <member name="M:BirdWarsTest.States.GameState.ClearTextAreas">
            <summary>
            Clears text areas. Effects vary with child state.
            </summary>
        </member>
        <member name="P:BirdWarsTest.States.GameState.Content">
            <value>Game content manager reference</value>
        </member>
        <member name="F:BirdWarsTest.States.GameState.graphics">
            <value>Graphics device reference</value>
        </member>
        <member name="F:BirdWarsTest.States.GameState.networkManager">
            <value>Game networkManager reference</value>
        </member>
        <member name="F:BirdWarsTest.States.GameState.stateWidth">
            <value>State width</value>
        </member>
        <member name="F:BirdWarsTest.States.GameState.stateHeight">
            <value>State height</value>
        </member>
        <member name="T:BirdWarsTest.States.LoginState">
            <summary>
            Handles drawing and updating of all gameObjects 
            necessary for login.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.LoginState.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GameWindow,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager@,System.Int32,System.Int32)">
            <summary>
            Creates empty login state. Sets gamewindow reference and initializes
            gameObjects List.
            </summary>
            <param name="newContent">Game contentManager</param>
            <param name="gameWindowIn">Game window</param>
            <param name="newGraphics">Graphics device reference</param>
            <param name="networkManagerIn">Game network manager</param>
            <param name="width_in">State width</param>
            <param name="height_in">State height</param>
        </member>
        <member name="M:BirdWarsTest.States.LoginState.Init(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Creates all state gameObjects.
            </summary>
            <param name="handler">Game state</param>
            <param name="stringManager">Game string manager</param>
        </member>
        <member name="M:BirdWarsTest.States.LoginState.ClearContents">
            <summary>
            Removes all gameObjects from state list.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.LoginState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.States.LoginState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
            <param name="gameTime">GAme time</param>
        </member>
        <member name="M:BirdWarsTest.States.LoginState.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws all gameObjects on the screen.
            </summary>
            <param name="sprites">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.States.LoginState.SetErrorMessage(System.String)">
            <summary>
            Sets the error message on the error message object.
            </summary>
            <param name="errorMessage">Error message</param>
        </member>
        <member name="P:BirdWarsTest.States.LoginState.GameObjects">
            <summary>
            List of all state gameObjects.
            </summary>
        </member>
        <member name="T:BirdWarsTest.States.MainMenuState">
            <summary>
            Handles drawing and updating of all gameObjects 
            necessary for Main menu state.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.MainMenuState.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager@,System.Int32,System.Int32)">
            <summary>
            Creates empty MainMenuState. Sets gamewindow reference and initializes
            gameObjects List.
            </summary>
            <param name="newContent">Game contentManager</param>
            <param name="newGraphics">Graphics device reference</param>
            <param name="networkManagerIn">Game network manager</param>
            <param name="width_in">State width</param>
            <param name="height_in">State height</param>
        </member>
        <member name="M:BirdWarsTest.States.MainMenuState.Init(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Creates all state gameObjects.
            </summary>
            <param name="handler">Game state</param>
            <param name="stringManager">Game string manager</param>
        </member>
        <member name="M:BirdWarsTest.States.MainMenuState.ClearContents">
            <summary>
            Removes all gameObjects from state list.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.MainMenuState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.States.MainMenuState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
            <param name="gameTime">GAme time</param>
        </member>
        <member name="M:BirdWarsTest.States.MainMenuState.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws all gameObjects on the screen.
            </summary>
            <param name="sprites"></param>
        </member>
        <member name="P:BirdWarsTest.States.MainMenuState.NetworkManager">
            <summary>
            Exposes the state's protected network manager.
            </summary>
        </member>
        <member name="T:BirdWarsTest.States.OptionsState">
            <summary>
            Handles drawing and updating of all gameObjects 
            necessary for OptionsState.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.OptionsState.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GameWindow,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager@,System.Int32,System.Int32)">
            <summary>
            Creates empty MainMenuState. Sets gamewindow reference and initializes
            gameObjects List.
            </summary>
            <param name="newContent">Game contentManager</param>
            <param name="gameWindowIn">Game window reference</param>
            <param name="newGraphics">Graphics device reference</param>
            <param name="networkManagerIn">Game network manager</param>
            <param name="width_in">State width</param>
            <param name="height_in">State height</param>
        </member>
        <member name="M:BirdWarsTest.States.OptionsState.Init(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Creates all state gameObjects.
            </summary>
            <param name="handler">Game state</param>
            <param name="stringManager">Game string manager</param>
        </member>
        <member name="M:BirdWarsTest.States.OptionsState.ClearContents">
            <summary>
            Removes all gameObjects from state list.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.OptionsState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.States.OptionsState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
            <param name="gameTime">GAme time</param>
        </member>
        <member name="M:BirdWarsTest.States.OptionsState.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws all gameObjects on the screen.
            </summary>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.States.OptionsState.SetErrorMessage(System.String)">
            <summary>
            Sets the error message on the error message object.
            </summary>
            <param name="errorMessage">Error message</param>
        </member>
        <member name="M:BirdWarsTest.States.OptionsState.SetMessage(System.String)">
            <summary>
            Sets the message on the message object.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="P:BirdWarsTest.States.OptionsState.GameObjects">
            <value>The list of state gameObjects</value>
        </member>
        <member name="T:BirdWarsTest.States.PasswordRecoveryState">
            <summary>
            Handles drawing and updating of all gameObjects 
            necessary for PasswordRecovery State.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.PasswordRecoveryState.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GameWindow,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager@,System.Int32,System.Int32)">
            <summary>
            Creates empty MainMenuState. Sets gamewindow reference and initializes
            gameObjects List.
            </summary>
            <param name="newContent">Game contentManager</param>
            <param name="gameWindowIn">Game window</param>
            <param name="newGraphics">Graphics device reference</param>
            <param name="networkManagerIn">Game network manager</param>
            <param name="width_in">State width</param>
            <param name="height_in">State height</param>
        </member>
        <member name="M:BirdWarsTest.States.PasswordRecoveryState.Init(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Creates all state gameObjects.
            </summary>
            <param name="handler">Game state</param>
            <param name="stringManager">Game string manager</param>
        </member>
        <member name="M:BirdWarsTest.States.PasswordRecoveryState.ClearContents">
            <summary>
            Removes all gameObjects from state list.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.PasswordRecoveryState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.States.PasswordRecoveryState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
            <param name="gameTime">GAme time</param>
        </member>
        <member name="M:BirdWarsTest.States.PasswordRecoveryState.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws all gameObjects on the screen.
            </summary>
            <param name="sprites"></param>
        </member>
        <member name="M:BirdWarsTest.States.PasswordRecoveryState.SetErrorMessage(System.String)">
            <summary>
            Sets the error message on the error message object.
            </summary>
            <param name="errorMessage">Error message</param>
        </member>
        <member name="M:BirdWarsTest.States.PasswordRecoveryState.SetMessage(System.String)">
            <summary>
            Sets the message on the message object.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:BirdWarsTest.States.PasswordRecoveryState.ClearTextAreas">
            <summary>
            Clears the text areas in objects 4, 7 and 9 of GameObjects list.
            </summary>
        </member>
        <member name="P:BirdWarsTest.States.PasswordRecoveryState.GameObjects">
            <value>The list of state gameObjects</value>
        </member>
        <member name="T:BirdWarsTest.States.PlayState">
             <summary>
             Handles drawing and updating of all gameObjects 
            necessary for PlayState.
             </summary>
        </member>
        <member name="M:BirdWarsTest.States.PlayState.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager@,System.Int32,System.Int32)">
            <summary>
            Creates empty MainMenuState. Sets gamewindow reference and initializes
            gameObjects List.
            </summary>
            <param name="newContent">Game contentManager</param>
            <param name="newGraphics">Graphics device reference</param>
            <param name="networkManagerIn">Game network manager</param>
            <param name="width_in">State width</param>
            <param name="height_in">State height</param>
        </member>
        <member name="M:BirdWarsTest.States.PlayState.Init(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Creates all state gameObjects.
            </summary>
            <param name="handler">Game state</param>
            <param name="stringManager">Game string manager</param>
        </member>
        <member name="M:BirdWarsTest.States.PlayState.ClearContents">
            <summary>
            Removes all gameObjects from state list.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.PlayState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.States.PlayState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
            <param name="gameTime">GAme time</param>
        </member>
        <member name="M:BirdWarsTest.States.PlayState.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws all gameObjects on the screen.
            </summary>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="P:BirdWarsTest.States.PlayState.NetWorkManager">
            <value>Exposes the state's protected network manager.</value>
        </member>
        <member name="P:BirdWarsTest.States.PlayState.PlayerManager">
            <value>The state's Player manager.</value>
        </member>
        <member name="P:BirdWarsTest.States.PlayState.ItemManager">
            <value>The state's Item manager.</value>
        </member>
        <member name="P:BirdWarsTest.States.PlayState.DisplayManager">
            <value>The state's Display manager.</value>
        </member>
        <member name="T:BirdWarsTest.States.StateHandler">
             <summary>
             stores all game states and handles their initialization,
            and transitions.
             </summary>
        </member>
        <member name="M:BirdWarsTest.States.StateHandler.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GameWindow,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager)">
            <summary>
            Creates an isntance of a statehandler, an empty shell of all
            game states and sets network manager.
            </summary>
            <param name="content">Game content manager</param>
            <param name="gameWindow">Game window</param>
            <param name="graphics">Graphics device reference</param>
            <param name="networkManagerIn">Game network Manager</param>
        </member>
        <member name="M:BirdWarsTest.States.StateHandler.InitializeInitialState">
            <summary>
            Initializes the first state on application startup.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.StateHandler.ChangeState(BirdWarsTest.States.StateTypes)">
            <summary>
            Sets LastState to currentState, currentState to the new state
            and calls enter method of new state.
            </summary>
            <param name="state">The target game state.</param>
        </member>
        <member name="M:BirdWarsTest.States.StateHandler.GetCurrentState">
            <summary>
            Returns the current state.
            </summary>
            <returns>returns the current state.</returns>
        </member>
        <member name="M:BirdWarsTest.States.StateHandler.GetState(BirdWarsTest.States.StateTypes)">
            <summary>
            Get the specified game state
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="P:BirdWarsTest.States.StateHandler.StringManager">
            <value>The Game String Manager</value>
        </member>
        <member name="F:BirdWarsTest.States.StateHandler.networkManager">
            <value>The Game network manager</value>
        </member>
        <member name="P:BirdWarsTest.States.StateHandler.LastState">
            <value>The previous state accessed.</value>
        </member>
        <member name="T:BirdWarsTest.States.StateTypes">
             <summary>
             Used to keep track of states and their order.
            	Game states MUST be initialized according to the
            order in this file.
             </summary>
        </member>
        <member name="F:BirdWarsTest.States.StateTypes.LoginState">
            <summary>
            The login state -0
            </summary>
        </member>
        <member name="F:BirdWarsTest.States.StateTypes.UserRegistryState">
            <summary>
            The user registry state -1
            </summary>
        </member>
        <member name="F:BirdWarsTest.States.StateTypes.PasswordRecoveryState">
            <summary>
            The password recovery state -2
            </summary>
        </member>
        <member name="F:BirdWarsTest.States.StateTypes.MainMenuState">
            <summary>
            The main menu state -3
            </summary>
        </member>
        <member name="F:BirdWarsTest.States.StateTypes.WaitingRoomState">
            <summary>
            The waiting room state -4
            </summary>
        </member>
        <member name="F:BirdWarsTest.States.StateTypes.PlayState">
            <summary>
            The play state -5
            </summary>
        </member>
        <member name="F:BirdWarsTest.States.StateTypes.OptionsState">
            <summary>
            The options state -6
            </summary>
        </member>
        <member name="F:BirdWarsTest.States.StateTypes.StatisticsState">
            <summary>
            The statistics state -7
            </summary>
        </member>
        <member name="T:BirdWarsTest.States.StatisticsState">
            <summary>
            Handles drawing and updating of all gameObjects 
            necessary for StatisticsState.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.StatisticsState.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager@,System.Int32,System.Int32)">
            <summary>
            Creates empty MainMenuState. Sets gamewindow reference and initializes
            gameObjects List.
            </summary>
            <param name="newContent">Game contentManager</param>
            <param name="newGraphics">Graphics device reference</param>
            <param name="networkManagerIn">Game network manager</param>
            <param name="width_in">State width</param>
            <param name="height_in">State height</param>
        </member>
        <member name="M:BirdWarsTest.States.StatisticsState.Init(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Creates all state gameObjects.
            </summary>
            <param name="handler">Game state</param>
            <param name="stringManager">Game string manager</param>
        </member>
        <member name="M:BirdWarsTest.States.StatisticsState.ClearContents">
            <summary>
            Removes all gameObjects from state list.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.StatisticsState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.States.StatisticsState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
            <param name="gameTime">GAme time</param>
        </member>
        <member name="M:BirdWarsTest.States.StatisticsState.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws all gameObjects on the screen.
            </summary>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="T:BirdWarsTest.States.UserRegistryState">
            <summary>
            Handles drawing and updating of all gameObjects 
            necessary for UserRegistryState.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.UserRegistryState.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GameWindow,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager@,System.Int32,System.Int32)">
            <summary>
            Creates empty MainMenuState. Sets gamewindow reference and initializes
            gameObjects List.
            </summary>
            <param name="newContent">Game contentManager</param>
            <param name="gameWindowIn">Game window reference</param>
            <param name="newGraphics">Graphics device reference</param>
            <param name="networkManagerIn">Game network manager</param>
            <param name="width_in">State width</param>
            <param name="height_in">State height</param>
        </member>
        <member name="M:BirdWarsTest.States.UserRegistryState.Init(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Creates all state gameObjects.
            </summary>
            <param name="handler">Game state</param>
            <param name="stringManager">Game string manager</param>
        </member>
        <member name="M:BirdWarsTest.States.UserRegistryState.ClearContents">
            <summary>
            Removes all gameObjects from state list.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.UserRegistryState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.States.UserRegistryState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
            <param name="gameTime">GAme time</param>
        </member>
        <member name="M:BirdWarsTest.States.UserRegistryState.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws all gameObjects on the screen.
            </summary>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="M:BirdWarsTest.States.UserRegistryState.SetErrorMessage(System.String)">
            <summary>
            Sets the error message on the error message object.
            </summary>
            <param name="errorMessage">Error message</param>
        </member>
        <member name="M:BirdWarsTest.States.UserRegistryState.SetMessage(System.String)">
            <summary>
            Sets the message on the message object.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:BirdWarsTest.States.UserRegistryState.ClearTextAreas">
            <summary>
            Clear the text aras un objects at indices 6, 8, 10, 12, 14
            and 16.
            </summary>
        </member>
        <member name="P:BirdWarsTest.States.UserRegistryState.GameObjects">
            <value>The list of state gameObjects</value>
        </member>
        <member name="T:BirdWarsTest.States.WaitingRoomState">
             <summary>
             Handles drawing and updating of all gameObjects 
            necessary for WaitingRoomState.
             </summary>
        </member>
        <member name="M:BirdWarsTest.States.WaitingRoomState.#ctor(Microsoft.Xna.Framework.Content.ContentManager,Microsoft.Xna.Framework.GameWindow,Microsoft.Xna.Framework.GraphicsDeviceManager@,BirdWarsTest.Network.INetworkManager@,System.Int32,System.Int32)">
            <summary>
            Creates empty MainMenuState. Sets gamewindow reference and initializes
            gameObjects List.
            </summary>
            <param name="newContent">Game contentManager</param>
            <param name="gameWindowIn">Game window reference</param>
            <param name="newGraphics">Graphics device reference</param>
            <param name="networkManagerIn">Game network manager</param>
            <param name="width_in">State width</param>
            <param name="height_in">State height</param>
        </member>
        <member name="M:BirdWarsTest.States.WaitingRoomState.Init(BirdWarsTest.States.StateHandler,BirdWarsTest.Utilities.StringManager)">
            <summary>
            Creates all state gameObjects.
            </summary>
            <param name="handler">Game state</param>
            <param name="stringManager">Game string manager</param>
        </member>
        <member name="M:BirdWarsTest.States.WaitingRoomState.ClearContents">
            <summary>
            Removes all gameObjects from state list.
            </summary>
        </member>
        <member name="M:BirdWarsTest.States.WaitingRoomState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
        </member>
        <member name="M:BirdWarsTest.States.WaitingRoomState.UpdateLogic(BirdWarsTest.States.StateHandler,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Handles network incoming messages. Updates all gameObjects
            in state.
            </summary>
            <param name="handler">Game statehandler</param>
            <param name="state">current keyboard state</param>
            <param name="gameTime">GAme time</param>
        </member>
        <member name="M:BirdWarsTest.States.WaitingRoomState.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Draws all gameObjects on the screen.
            </summary>
            <param name="batch">Game Spritebatch</param>
        </member>
        <member name="P:BirdWarsTest.States.WaitingRoomState.NetworkManager">
            <summary>
            Exposes the state's protected networkmanager.
            </summary>
        </member>
        <member name="P:BirdWarsTest.States.WaitingRoomState.GameObjects">
            <value>The list of state gameObjects</value>
        </member>
        <member name="P:BirdWarsTest.States.WaitingRoomState.UsernameManager">
            <value>ChatUsername manager</value>
        </member>
        <member name="P:BirdWarsTest.States.WaitingRoomState.MessageManager">
            <value>ChatMessage manager</value>
        </member>
        <member name="T:BirdWarsTest.Utilities.Languages">
            <summary>
            Used to keep track of available languages and language
            options.
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.Languages.English">
            <summary>
            English language
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.Languages.Spanish">
            <summary>
            Spanish language
            </summary>
        </member>
        <member name="T:BirdWarsTest.Utilities.PositionGenerator">
            <summary>
            Class used to get a fixed position from a list of possible
            positions by using a random index.The positions are used
            for player gameobjects.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Utilities.PositionGenerator.#ctor">
            <summary>
            Creates an instance of PositionGenerator, index
            generator and list of start positions. Adds all position positions
            </summary>
        </member>
        <member name="M:BirdWarsTest.Utilities.PositionGenerator.ResetLimit">
            <summary>
            Resets upper limit to starting value.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Utilities.PositionGenerator.ResetStartPositions">
            <summary>
            Adds all possible start positions.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Utilities.PositionGenerator.GetAPosition">
            <summary>
            Gets a position using a random index. It's like
            sticking your hand into a black bag and pulling
            a ball of random color.
            </summary>
            <returns>A player position.</returns>
        </member>
        <member name="T:BirdWarsTest.Utilities.StringManager">
             <summary>
             Handles the loading and retrieval of strings for user interface 
            and language changes in application.
             </summary>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringManager.#ctor">
            <summary>
            Creates an instance of string Manager.
            Instantialtes string list, sets current language
            and retrieves strings pertaining to current language.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringManager.ChangeLanguage(BirdWarsTest.Utilities.Languages)">
            <summary>
            Changes the currently selected language to
            the specified input language.
            </summary>
            <param name="newLanguage">Specified input language.</param>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringManager.GetString(BirdWarsTest.Utilities.StringNames)">
            <summary>
            Returns a string from the list of game strings
            at the specified intex.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:BirdWarsTest.Utilities.StringManager.Strings">
            <value>The list of game strings</value>
        </member>
        <member name="P:BirdWarsTest.Utilities.StringManager.CurrentLanguage">
            <value>Current selected language</value>
        </member>
        <member name="T:BirdWarsTest.Utilities.StringNames">
            <summary>
            Used to keep track of all the different strings used 
            in the application.
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Login">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.RegisterL">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.LostPassword">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Email">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Password">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Registration">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.LastName">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Username">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.ConfirmPass">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.RegisterWR">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Cancel">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.RecoverPass">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.SendCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.EnterCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.NewPassword">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.FindGame">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.CreateGame">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Statistics">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Settings">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Logout">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Players">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.StartRound">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Leave">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.UserStats">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.MatchesPlayed">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.MatchesWon">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.WinRate">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.MatchesSurvived">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.SurvivalRate">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.MatchesLost">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.LoseRate">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.ShortestTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Return">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Volume">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Keyboard">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Language">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Accept">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.English">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Spanish">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.LoginApproved">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.LoginDenied">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.EmailInvalid">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PasswordInvalid">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.NameInvalid">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.LastNamesInvalid">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.UsernameInvalid">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PasswordsDoNotMatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.SendMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.EmailBodyMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.RegistrationSuccessful">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.EmailAlreadyExists">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.UsernameAlreadyExists">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PasswordReset">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PasswordResetEmailBody">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PasswordEmailSuccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PasswordEmailFailure">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PasswordResetSuccessful">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PasswordCodesDoNotMatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PasswordChangeNotAsked">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.IpAddress">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Port">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.IAmTheServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.ConnectionSuccessful">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.AddressInvalid">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.PortInvalid">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.BanMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.ServerUsername">
            <summary>
            
            </summary>
        </member>
        <member name="F:BirdWarsTest.Utilities.StringNames.ServerMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:BirdWarsTest.Utilities.StringValidator">
            <summary>
            Class used to check the validity of user input strings
            used throughout the applicaction.
            </summary>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.AreLoginArgsValid(BirdWarsTest.InputComponents.EventArguments.LoginEventArgs)">
            <summary>
            Applies the required string validation to login arguments.
            </summary>
            <param name="loginEvent">Login events that hold user input</param>
            <returns>bool inidicating if arguments are valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.AreRegisterArgsValid(BirdWarsTest.InputComponents.EventArguments.RegisterEventArgs)">
            <summary>
            Appliess the required string validation to registration arguments.
            </summary>
            <param name="registerEvents">Registration events that hold user input.</param>
            <returns>bool indicating if arguments are valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.IsNameValid(System.String)">
            <summary>
            Applies validation checks to a name string.
            </summary>
            <param name="name">User input string</param>
            <returns>bool indicating if string is valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.AreLastNamesValid(System.String)">
            <summary>
            Applies validation checks to a last name string.
            </summary>
            <param name="lastNames">User input string</param>
            <returns>bool indicating if string is valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.IsUsernameValid(System.String)">
            <summary>
            Applies validation checks to a username string.
            </summary>
            <param name="username">User input string.</param>
            <returns>bool indicating if string is valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.IsEmailValid(System.String)">
            <summary>
            Applies validation checks to an email string.
            </summary>
            <param name="email">User input string</param>
            <returns>bool indicating if string is valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.IsPasswordValid(System.String)">
            <summary>
            Applies validation checks to a password string.
            </summary>
            <param name="password">User input string.</param>
            <returns>bool indicating if string is valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.IsNewPasswordValid(System.String,System.String)">
            <summary>
            Applies validation checks to a new password string.
            </summary>
            <param name="password">User input string to compare to.</param>
            <param name="confirmPassword">User input string to validate.</param>
            <returns>bool indicating if string is valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.IsAddressValid(System.String)">
            <summary>
            Applies validation string to an ip address string/
            </summary>
            <param name="address">User input string.</param>
            <returns>bool indicating if string is valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.IsPortValid(System.String)">
            <summary>
            Applies validation chacks to a port string.
            </summary>
            <param name="port">User input string</param>
            <returns>bool indicating if string is valid.</returns>
        </member>
        <member name="M:BirdWarsTest.Utilities.StringValidator.IsPasswordAndConfirmEqual(System.String,System.String)">
            <summary>
            Checks to see whether the entered passwords are equal in value.
            </summary>
            <param name="password">User input to compare to.</param>
            <param name="confirmPassword">User input to compare to.</param>
            <returns>bool indicating if strings are of equal value.</returns>
        </member>
    </members>
</doc>
